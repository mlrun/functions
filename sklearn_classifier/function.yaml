kind: job
metadata:
  name: sklearn-classifier
  tag: ''
  hash: 563204860716de5832376cede1ebdf55e107269d
  project: ''
  labels:
    author: yjb
    framework: sklearn
  categories:
  - machine-learning
  - model-training
spec:
  command: ''
  args: []
  image: mlrun/mlrun
  env: []
  default_handler: train_model
  entry_points:
    train_model:
      name: train_model
      doc: 'train a classifier


        An optional cutom model evaluator can be supplied that should have the signature:

        `my_custom_evaluator(context, xvalid, yvalid, model)` and return a dictionary
        of

        scalar "results", a "plots" keys with a list of PlotArtifacts, and

        and "tables" key containing a returned list of TableArtifacts.'
      parameters:
      - name: context
        type: MLClientCtx
        doc: the function context
        default: ''
      - name: model_pkg_class
        type: str
        doc: the model to train, e.g, "sklearn.neural_networks.MLPClassifier", or
          json model config
        default: ''
      - name: dataset
        type: DataItem
        doc: ("data") name of raw data file
        default: ''
      - name: label_column
        type: str
        doc: ground-truth (y) labels
        default: labels
      - name: encode_cols
        type: List[str]
        doc: dictionary of names and prefixes for columns that are to hot be encoded.
        default: []
      - name: sample
        type: int
        doc: Selects the first n rows, or select a sample starting from the first.
          If negative <-1, select a random sample
        default: <_ast.USub object at 0x7fd86dbc17b8>
      - name: test_size
        type: float
        doc: (0.05) test set size
        default: 0.3
      - name: train_val_split
        type: float
        doc: (0.75) Once the test set has been removed the training set gets this
          proportion.
        default: 0.7
      - name: test_set_key
        type: str
        doc: key of held out data in artifact store
        default: test_set
      - name: model_evaluator
        doc: (None) a custom model evaluator can be specified
        default: null
      - name: models_dest
        type: str
        doc: ("") models subfolder on artifact path
        default: ''
      - name: plots_dest
        type: str
        doc: plot subfolder on artifact path
        default: plots
      - name: file_ext
        type: str
        doc: ("parquet") format for test_set_key hold out data
        default: parquet
      - name: model_pkg_file
        type: str
        default: ''
      - name: random_state
        type: int
        doc: (1) sklearn rng seed
        default: 1
      outputs:
      - default: ''
      lineno: 20
  description: train any classifier using scikit-learn's API
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKZnJvbSBtbHJ1bi5hcnRpZmFjdHMubW9kZWwgaW1wb3J0IE1vZGVsQXJ0aWZhY3QKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3BrZ19jbGFzczogc3RyLAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IExpc3Rbc3RyXSA9IFtdLAogICAgc2FtcGxlOiBpbnQgPSAtMSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjMwLAogICAgdHJhaW5fdmFsX3NwbGl0OiBmbG9hdCA9IDAuNzAsCiAgICB0ZXN0X3NldF9rZXk6IHN0ciA9ICJ0ZXN0X3NldCIsCiAgICBtb2RlbF9ldmFsdWF0b3I9Tm9uZSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaWxlX2V4dDogc3RyID0gInBhcnF1ZXQiLAogICAgbW9kZWxfcGtnX2ZpbGU6IHN0ciA9ICIiLAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhIGNsYXNzaWZpZXIKCiAgICBBbiBvcHRpb25hbCBjdXRvbSBtb2RlbCBldmFsdWF0b3IgY2FuIGJlIHN1cHBsaWVkIHRoYXQgc2hvdWxkIGhhdmUgdGhlIHNpZ25hdHVyZToKICAgIGBteV9jdXN0b21fZXZhbHVhdG9yKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbClgIGFuZCByZXR1cm4gYSBkaWN0aW9uYXJ5IG9mCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQKICAgIGFuZCAidGFibGVzIiBrZXkgY29udGFpbmluZyBhIHJldHVybmVkIGxpc3Qgb2YgVGFibGVBcnRpZmFjdHMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3BrZ19jbGFzczogICB0aGUgbW9kZWwgdG8gdHJhaW4sIGUuZywgInNrbGVhcm4ubmV1cmFsX25ldHdvcmtzLk1MUENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMSAtIHRyYWluX3ZhbF9zcGxpdCwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgdGVzdF9zZXQgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldF9rZXksCiAgICAgICAgZGY9dGVzdF9zZXQsCiAgICAgICAgZm9ybWF0PWZpbGVfZXh0LAogICAgICAgIGluZGV4PUZhbHNlLAogICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJkYXRhIiksCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sICJ5IjogeXRyYWluLnZhbHVlc30pCgogICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQoKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKICAgIHBsb3RzX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3N1YnBhdGgobW9kZWxzX2Rlc3QsIHBsb3RzX2Rlc3QpCiAgICBpZiBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gbW9kZWxfZXZhbHVhdG9yKAogICAgICAgICAgICBjb250ZXh0LCB4dmFsaWQsIHl2YWxpZCwgbW9kZWwsIHBsb3RzX2FydGlmYWN0X3BhdGg9cGxvdHNfcGF0aAogICAgICAgICkKICAgIGVsc2U6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92MigKICAgICAgICAgICAgY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLCBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgKICAgICAgICApCgogICAga3dhcmdzID0ge30KICAgIGlmICJhbGdvcml0aG0iIGluIE1vZGVsQXJ0aWZhY3QuX2RpY3RfZmllbGRzOgogICAgICAgIGt3YXJnc1sidHJhaW5pbmdfc2V0Il0gPSB0ZXN0X3NldAogICAgICAgIGt3YXJnc1sibGFiZWxfY29sdW1uIl0gPSBsYWJlbF9jb2x1bW4KICAgICAgICBzcGxpdCA9IG1vZGVsX3BrZ19jbGFzcy5yc3BsaXQoIi4iLCAxKQogICAgICAgIGlmIHNwbGl0IGFuZCBsZW4oc3BsaXQpID09IDI6CiAgICAgICAgICAgIGt3YXJnc1siYWxnb3JpdGhtIl0gPSBzcGxpdFsxXQoKICAgICAgICBpZiBkYXRhc2V0Lm1ldGEgYW5kIGRhdGFzZXQubWV0YS5raW5kID09ICJGZWF0dXJlVmVjdG9yIjoKICAgICAgICAgICAga3dhcmdzWyJmZWF0dXJlX3ZlY3RvciJdID0gZGF0YXNldC5tZXRhLnVyaQoKICAgIGNvbnRleHQuc2V0X2xhYmVsKCJjbGFzcyIsIG1vZGVsX3BrZ19jbGFzcykKICAgIGNvbnRleHQubG9nX21vZGVsKAogICAgICAgICJtb2RlbCIsCiAgICAgICAgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1hcnRpZmFjdF9wYXRoLAogICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgbGFiZWxzPXsiY2xhc3MiOiBtb2RlbF9wa2dfY2xhc3N9LAogICAgICAgIGZyYW1ld29yaz0ic2tsZWFybiIsCiAgICAgICAgKiprd2FyZ3MKICAgICkK
    commands: []
    code_origin: https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/sklearn_classifier/sklearn_classifier.py
  affinity: null
verbose: false
