kind: job
metadata:
  name: xgb-trainer
  tag: ''
  hash: 089561cd823763ece3b9357b8d3466ec3fce12c8
  project: ''
  labels:
    author: yjb
  categories:
  - models
  - classifier
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  env: []
  default_handler: train_model
  entry_points:
    gen_xgb_model:
      name: gen_xgb_model
      doc: 'generate an xgboost model


        Multiple model types that can be estimated using

        the XGBoost Scikit-Learn API.


        Input can either be a predefined json model configuration or one

        of the five xgboost model types: "classifier", "regressor", "ranker",

        "rf_classifier", or "rf_regressor".


        In either case one can pass in a params dict to modify defaults values.


        Based on `mlrun.mlutils.models.gen_sklearn_model`, see the function

        `sklearn_classifier` in this repository.'
      parameters:
      - name: model_type
        type: str
        doc: one of "classifier", "regressor", "ranker", "rf_classifier", or "rf_regressor"
      - name: xgb_params
        type: dict
        doc: class init parameters
      outputs: []
      lineno: 15
    train_model:
      name: train_model
      doc: train an xgboost model.
      parameters:
      - name: context
        type: MLClientCtx
        doc: the function context
      - name: model_type
        type: str
        doc: the model type to train, 'classifier', 'regressor'...
      - name: dataset
        type: DataItem
        doc: ("data") name of raw data file
      - name: label_column
        type: str
        doc: ground-truth (y) labels
        default: labels
      - name: sample
        type: int
        doc: Selects the first n rows, or select a sample starting from the first.
          If negative <-1, select a random sample
        default: <_ast.USub object at 0x7f87983ed610>
      - name: test_size
        type: float
        doc: (0.05) test set size
        default: 0.05
      - name: valid_size
        type: float
        doc: (0.75) Once the test set has been removed the training set gets this
          proportion.
        default: 0.75
      - name: random_state
        type: int
        doc: (1) sklearn rng seed
        default: 1
      - name: model_filename
        type: str
        doc: model file filename, points to a directory
        default: xgb-model
      - name: models_dest
        type: str
        doc: models subfolder on artifact path
      - name: plots_dest
        type: str
        doc: plot subfolder on artifact path
      - name: score_method
        type: str
        doc: for multiclass classification
        default: micro
      - name: file_ext
        type: str
        doc: format for test_set_key hold out data
        default: parquet
      - name: model_pkg_file
        type: str
      outputs: []
      lineno: 53
  description: train any classifier using scikit-learn's API
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlciBvbiAyMDIwLTA1LTAzIDAyOjUxCgppbXBvcnQgd2FybmluZ3MKd2FybmluZ3Muc2ltcGxlZmlsdGVyKGFjdGlvbj0iaWdub3JlIiwgY2F0ZWdvcnk9RnV0dXJlV2FybmluZykKCmZyb20gIG1scnVuLm1sdXRpbHMgaW1wb3J0IChnZXRfc2FtcGxlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0X3NwbGl0cywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlbl9za2xlYXJuX21vZGVsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlX2NsYXNzLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWxfY2xhc3NfbW9kZWwpCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMKCmRlZiBnZW5feGdiX21vZGVsKG1vZGVsX3R5cGU6IHN0ciwgeGdiX3BhcmFtczogZGljdCk6CiAgICAiIiJnZW5lcmF0ZSBhbiB4Z2Jvb3N0IG1vZGVsCiAgICAKICAgIE11bHRpcGxlIG1vZGVsIHR5cGVzIHRoYXQgY2FuIGJlIGVzdGltYXRlZCB1c2luZwogICAgdGhlIFhHQm9vc3QgU2Npa2l0LUxlYXJuIEFQSS4KICAgIAogICAgSW5wdXQgY2FuIGVpdGhlciBiZSBhIHByZWRlZmluZWQganNvbiBtb2RlbCBjb25maWd1cmF0aW9uIG9yIG9uZQogICAgb2YgdGhlIGZpdmUgeGdib29zdCBtb2RlbCB0eXBlczogImNsYXNzaWZpZXIiLCAicmVncmVzc29yIiwgInJhbmtlciIsCiAgICAicmZfY2xhc3NpZmllciIsIG9yICJyZl9yZWdyZXNzb3IiLgogICAgCiAgICBJbiBlaXRoZXIgY2FzZSBvbmUgY2FuIHBhc3MgaW4gYSBwYXJhbXMgZGljdCB0byBtb2RpZnkgZGVmYXVsdHMgdmFsdWVzLgogICAgCiAgICBCYXNlZCBvbiBgbWxydW4ubWx1dGlscy5tb2RlbHMuZ2VuX3NrbGVhcm5fbW9kZWxgLCBzZWUgdGhlIGZ1bmN0aW9uCiAgICBgc2tsZWFybl9jbGFzc2lmaWVyYCBpbiB0aGlzIHJlcG9zaXRvcnkuCiAgICAKICAgIDpwYXJhbSBtb2RlbF90eXBlOiBvbmUgb2YgImNsYXNzaWZpZXIiLCAicmVncmVzc29yIiwKICAgICAgICAgICAgICAgICAgICAgICAicmFua2VyIiwgInJmX2NsYXNzaWZpZXIiLCBvcgogICAgICAgICAgICAgICAgICAgICAgInJmX3JlZ3Jlc3NvciIKICAgIDpwYXJhbSB4Z2JfcGFyYW1zOiBjbGFzcyBpbml0IHBhcmFtZXRlcnMKICAgICIiIgogICAgZnJvbSBtbHJ1bi5tbHV0aWxzIGltcG9ydCBnZXRfY2xhc3NfZml0LCBnZW5fc2tsZWFybl9tb2RlbAoKICAgIG10eXBlcyA9IHsKICAgICAgICAiY2xhc3NpZmllciIgICA6ICJ4Z2Jvb3N0LlhHQkNsYXNzaWZpZXIiLAogICAgICAgICJyZWdyZXNzb3IiICAgIDogInhnYm9vc3QuWEdCUmVncmVzc29yIiwKICAgICAgICAicmFua2VyIiAgICAgICA6ICJ4Z2Jvb3N0LlhHQlJhbmtlciIsCiAgICAgICAgInJmX2NsYXNzaWZpZXIiOiAieGdib29zdC5YR0JSRkNsYXNzaWZpZXIiLAogICAgICAgICJyZl9yZWdyZXNzb3IiIDogInhnYm9vc3QuWEdCUkZSZWdyZXNzb3IiCiAgICB9CiAgICBpZiBtb2RlbF90eXBlLmVuZHN3aXRoKCJqc29uIik6CiAgICAgICAgbW9kZWxfY29uZmlnID0gbW9kZWxfdHlwZQogICAgZWxpZiBtb2RlbF90eXBlIGluIG10eXBlcy5rZXlzKCk6CiAgICAgICAgbW9kZWxfY29uZmlnID0gbXR5cGVzW21vZGVsX3R5cGVdCiAgICBlbHNlOgogICAgICAgIHJhaXNlIEV4Y2VwdGlvbigidW5yZWNvZ25pemVkIG1vZGVsIHR5cGUsIHNlZSBoZWxwIGRvY3VtZW50YXRpb24iKQoKICAgIHJldHVybiBnZW5fc2tsZWFybl9tb2RlbChtb2RlbF9jb25maWcsIHhnYl9wYXJhbXMpCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3R5cGU6IHN0ciwKICAgIGRhdGFzZXQ6IERhdGFJdGVtLAogICAgbGFiZWxfY29sdW1uOiBzdHIgPSAibGFiZWxzIiwKICAgIHNhbXBsZTogaW50ID0gLTEsCiAgICB0ZXN0X3NpemU6IGZsb2F0ID0gMC4wNSwKICAgIHZhbGlkX3NpemU6IGZsb2F0ID0gMC43NSwKICAgIHJhbmRvbV9zdGF0ZTogaW50ID0gMSwKICAgIG1vZGVsX2ZpbGVuYW1lOiBzdHIgPSAieGdiLW1vZGVsIiwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgc2NvcmVfbWV0aG9kOiBzdHIgPSAibWljcm8iLAogICAgZmlsZV9leHQ6IHN0ciA9ICJwYXJxdWV0IiwKICAgIG1vZGVsX3BrZ19maWxlOiBzdHIgPSAiIiwgICAgCikgLT4gTm9uZToKICAgICIiInRyYWluIGFuIHhnYm9vc3QgbW9kZWwuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3R5cGU6ICAgICAgICB0aGUgbW9kZWwgdHlwZSB0byB0cmFpbiwgJ2NsYXNzaWZpZXInLCAncmVncmVzc29yJy4uLgogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBzYW1wbGU6ICAgICAgICAgICAgU2VsZWN0cyB0aGUgZmlyc3QgbiByb3dzLCBvciBzZWxlY3QgYSBzYW1wbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3QuIElmIG5lZ2F0aXZlIDwtMSwgc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgcmFuZG9tIHNhbXBsZQogICAgOnBhcmFtIG1vZGVsX2ZpbGVuYW1lOiAgICBtb2RlbCBmaWxlIGZpbGVuYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludHMgdG8gYSBkaXJlY3RvcnkKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB2YWxpZF9zaXplOiAgICAgICAgICAoMC43NSkgT25jZSB0aGUgdGVzdCBzZXQgaGFzIGJlZW4gcmVtb3ZlZCB0aGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhaW5pbmcgc2V0IGdldHMgdGhpcyBwcm9wb3J0aW9uLgogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAogICAgOnBhcmFtIG1vZGVsc19kZXN0OiAgICAgICBtb2RlbHMgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgcGxvdCBzdWJmb2xkZXIgb24gYXJ0aWZhY3QgcGF0aAogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICBmb3IgbXVsdGljbGFzcyBjbGFzc2lmaWNhdGlvbgogICAgCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgIGZvcm1hdCBmb3IgdGVzdF9zZXRfa2V5IGhvbGQgb3V0IGRhdGEKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWxzIgogICAgcGxvdHNfZGVzdCA9IHBsb3RzX2Rlc3Qgb3IgZiJwbG90cy97Y29udGV4dC5uYW1lfSIKICAgIAogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCiAgICAKICAgICh4dHJhaW4seXRyYWluKSwgKHh2YWxpZCx5dmFsaWQpLCAgICAgKHh0ZXN0LHl0ZXN0KSwgKHhjYWwsIHljYWwpID0gZ2V0X3NwbGl0cygKICAgICAgICByYXcsIGxhYmVscywgNCwKICAgICAgICB0ZXN0X3NpemUsIAogICAgICAgIHZhbGlkX3NpemUsIAogICAgICAgIFsibGFiZWxzIl0sCiAgICAgICAgcmFuZG9tX3N0YXRlKQogICAgICAgIAogICAgbW9kZWxfY29uZmlnID0gZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKICAgIG1vZGVsX3Nob3J0X25hbWUgPSBtb2RlbF9jb25maWdbIk1FVEEiXVsiY2xhc3MiXS5zcGxpdCgnLicpWy0xXQogICAKICAgIFhHQkJvb3N0Q2xhc3MgPSBjcmVhdGVfY2xhc3MobW9kZWxfY29uZmlnWyJNRVRBIl1bImNsYXNzIl0pCiAgICBtb2RlbCA9IFhHQkJvb3N0Q2xhc3MoKiptb2RlbF9jb25maWdbIkNMQVNTIl0pCgogICAgbW9kZWxfY29uZmlnWyJGSVQiXS51cGRhdGUoeyJYIjogeHRyYWluLCJ5IjogeXRyYWluLnZhbHVlc30pCiAgICAKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9jbGFzc19tb2RlbCh4dmFsaWQsIHl2YWxpZCwgbW9kZWwpCiAgICBtb2RlbF9wbG90cyA9IGV2YWxfbWV0cmljcy5wb3AoInBsb3RzIikKICAgIGZvciBwbG90IGluIG1vZGVsX3Bsb3RzOgogICAgICAgIGNvbnRleHQubG9nX2FydGlmYWN0KHBsb3QsIGxvY2FsX3BhdGg9ZidwbG90c19kZXN0L3twbG90LmtleX0uaHRtbCcpCiAgICAgICAgCiAgICBtb2RlbF9iaW4gPSBkdW1wcyhtb2RlbC5nZXRfYm9vc3RlcigpKQogICAgY29udGV4dC5sb2dfbW9kZWwobW9kZWxfc2hvcnRfbmFtZSwgYm9keT1tb2RlbF9iaW4sIAogICAgICAgICAgICAgICAgICAgICAgbW9kZWxfZGlyPSJtb2RlbHMiLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9J21vZGVsLnBrbCcsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWV2YWxfbWV0cmljcykKICAgIGNvbnRleHQubG9nX3Jlc3VsdHMoZXZhbF9tZXRyaWNzKQoK
    commands: []
    code_origin: https://github.com/yjb-ds/functions.git#415141a21971c0bf58a23b7912fdb90d5322e5ed:xgb_trainer.ipynb
