kind: job
metadata:
  name: validate-great-expectations
  tag: ''
  hash: 82d0b647d443eb6e643d9dbfc8c0a650d74da018
  project: ''
  labels:
    author: nicks
    framework: great-expectations
  categories:
  - data-validation
  - data-analysis
spec:
  command: ''
  args: []
  image: ''
  build:
    functionSourceCode: 
    base_image: mlrun/mlrun
    commands:
    - python -m pip install great-expectations==0.15.41
    code_origin: https://github.com/igz-us-sales/functions.git#c7b44af35294494a531a014f3d02a28eff3f4105:/User/functions/validate_great_expectations/validate_great_expectations.py
    origin_filename: /User/functions/validate_great_expectations/validate_great_expectations.py
  entry_points:
    get_default_datasource_config:
      name: get_default_datasource_config
      doc: 'Convenience function to get the default pandas datasource config

        for use in validating expectations.'
      parameters:
      - name: datasource_name
        type: str
        doc: Name of datasource.
        default: ''
      - name: data_connector_name
        type: str
        doc: Name of data connector.
        default: ''
      outputs:
      - default: ''
        doc: Configuration for default datasource.
        type: dict
      lineno: 15
    get_default_checkpoint_config:
      name: get_default_checkpoint_config
      doc: 'Convenience function to get the default checkpoint config for

        use in validating expectations.'
      parameters:
      - name: checkpoint_name
        type: str
        doc: Name of checkpoint.
        default: ''
      outputs:
      - default: ''
        doc: Configuration for default checkpoint.
        type: dict
      lineno: 46
    get_data_doc_path:
      name: get_data_doc_path
      doc: 'Convenience function to get the path of the output

        data doc from a checkpoint result.'
      parameters:
      - name: checkpoint_result
        type: CheckpointResult
        doc: Great Expectations checkpoint result.
        default: ''
      outputs:
      - default: ''
        doc: Absolute path to new data doc.
        type: str
      lineno: 63
    validate_expectations:
      name: validate_expectations
      doc: 'Main function to validate an input dataset, datasource, data connector,

        and expectation suite.


        Runs the Great Expectation validation and logs

        whether the validation was a success as well as the output page

        of the data docs.'
      parameters:
      - name: context
        type: MLClientCtx
        doc: MLRun context.
        default: ''
      - name: data
        type: DataItem
        doc: Data to validate. Can be local or remote link.
        default: ''
      - name: expectation_suite_name
        type: str
        doc: Name of expectation suite to validate against.
        default: ''
      - name: data_asset_name
        type: str
        doc: Name of dataset in Great Expectations.
        default: ''
      - name: datasource_name
        type: str
        doc: Name of datasource to use for validation.
        default: pandas_datasource
      - name: data_connector_name
        type: str
        doc: Name of data connector to use for validation.
        default: default_runtime_data_connector_name
      - name: datasource_config
        type: dict
        doc: Full configuration for datasource. For use with custom data sources other
          than the default pandas datasource.
        default: null
      - name: batch_identifiers
        type: dict
        doc: Custom metadata for identifying particular batches of data. For use when
          not using the default batch identifiers.
        default: null
      - name: root_directory
        type: str
        doc: Path to underlying Great Expectations project. Defaults to MLRun project
          artifact path if not specified.
        default: null
      - name: checkpoint_name
        type: str
        doc: Name of checkpoint to use for validation.
        default: null
      - name: checkpoint_config
        type: dict
        doc: Full configuration for checkpoint. For use with custome checkpoint config
          other than the default.
        default: null
      outputs:
      - default: ''
      lineno: 80
  description: Validate a dataset using Great Expectations
  default_handler: validate_expectations
  disable_auto_mount: false
  env: []
  resources:
    requests:
      memory: 1Mi
      cpu: 25m
    limits:
      memory: 20Gi
      cpu: '2'
  priority_class_name: igz-workload-medium
  preemption_mode: prevent
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: app.iguazio.com/lifecycle
            operator: NotIn
            values:
            - preemptible
          - key: eks.amazonaws.com/capacityType
            operator: NotIn
            values:
            - SPOT
          - key: node-lifecycle
            operator: NotIn
            values:
            - spot
  tolerations: null
  security_context: {}
verbose: false
