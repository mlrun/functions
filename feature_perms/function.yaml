kind: job
metadata:
  name: feature-perms
  tag: ''
  hash: a050b879c78768ebf63db7aa3870ef63e94ec50b
  project: ''
  labels:
    author: yjb
  categories:
  - analysis
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  env:
  - name: V3IO_API
    value: ''
  - name: V3IO_USERNAME
    value: ''
  - name: V3IO_ACCESS_KEY
    value: ''
  default_handler: permutation_importances
  entry_points:
    permutation_importances:
      name: permutation_importances
      doc: 'calculate change in metric


        type ''permute'' uses a pre-estimated model

        type ''dropcol'' uses a re-estimates model'
      parameters:
      - name: context
        type: MLClientCtx
        doc: the function's execution context
      - name: model
        type: DataItem
        doc: a trained model
      - name: dataset
        type: DataItem
        doc: features and ground truths, regression targets
      - name: labels
        type: str
      - name: figsz
        doc: matplotlib figure size
        default:
        - 10
        - 5
      - name: plots_dest
        type: str
        doc: path within artifact store
        default: plots
      - name: fitype
        type: str
        default: permute
      outputs: []
      lineno: 89
  description: estimate feature importances using permutations
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bWJlcnMKCmltcG9ydCBza2xlYXJuCmZyb20gc2tsZWFybi5iYXNlIGltcG9ydCBjbG9uZQpmcm9tIHNrbGVhcm4udXRpbHMgaW1wb3J0IGNoZWNrX3JhbmRvbV9zdGF0ZQoKaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAppbXBvcnQgc2VhYm9ybiBhcyBzbnMKCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgUGxvdEFydGlmYWN0CmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbiwgQ2FsbGFibGUsIExpc3QKCmRlZiBfZ2V0X25fc2FtcGxlc19ib290c3RyYXAobl9zYW1wbGVzLCBtYXhfc2FtcGxlcykgLT4gaW50OgogICAgIiIiZ2V0IHRoZSBudW1iZXIgb2Ygc2FtcGxlcyBpbiBhIGJvb3RzdHJhcCBzYW1wbGUKICAgIAogICAgcmV0dXJucyB0aGUgdG90YWwgbnVtYmVyIG9mIHNhbXBsZXMgdG8gZHJhdyBmb3IgdGhlIGJvb3RzdHJhcCBzYW1wbGUKICAgIAogICAgcHJpdmF0ZSBhcGkgaW4gc2tsZWFybiA+PSB2MC4yNCwgdGFrZW4gZnJvbSBza2xlYXJuLmVuc2VtYmxlLl9mb3Jlc3QucHkKCiAgICA6cGFyYW0gbl9zYW1wbGVzOiAgIE51bWJlciBvZiBzYW1wbGVzIGluIHRoZSBkYXRhc2V0LgogICAgOnBhcmFtIG1heF9zYW1wbGVzOiAKICAgICAgICBUaGUgbWF4aW11bSBudW1iZXIgb2Ygc2FtcGxlcyB0byBkcmF3IGZyb20gdGhlIHRvdGFsIGF2YWlsYWJsZToKICAgICAgICAgICAgLSBpZiBmbG9hdCwgdGhpcyBpbmRpY2F0ZXMgYSBmcmFjdGlvbiBvZiB0aGUgdG90YWwgYW5kIHNob3VsZCBiZQogICAgICAgICAgICAgIHRoZSBpbnRlcnZhbCBgKDAsIDEpYDsKICAgICAgICAgICAgLSBpZiBpbnQsIHRoaXMgaW5kaWNhdGVzIHRoZSBleGFjdCBudW1iZXIgb2Ygc2FtcGxlczsKICAgICAgICAgICAgLSBpZiBOb25lLCB0aGlzIGluZGljYXRlcyB0aGUgdG90YWwgbnVtYmVyIG9mIHNhbXBsZXMuCiAgICAiIiIKICAgIGlmIG1heF9zYW1wbGVzIGlzIE5vbmU6CiAgICAgICAgcmV0dXJuIG5fc2FtcGxlcwoKICAgIGlmIGlzaW5zdGFuY2UobWF4X3NhbXBsZXMsIG51bWJlcnMuSW50ZWdyYWwpOgogICAgICAgIGlmIG5vdCAoMSA8PSBtYXhfc2FtcGxlcyA8PSBuX3NhbXBsZXMpOgogICAgICAgICAgICBtc2cgPSAiYG1heF9zYW1wbGVzYCBtdXN0IGJlIGluIHJhbmdlIDEgdG8ge30gYnV0IGdvdCB2YWx1ZSB7fSIKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihtc2cuZm9ybWF0KG5fc2FtcGxlcywgbWF4X3NhbXBsZXMpKQogICAgICAgIHJldHVybiBtYXhfc2FtcGxlcwoKICAgIGlmIGlzaW5zdGFuY2UobWF4X3NhbXBsZXMsIG51bWJlcnMuUmVhbCk6CiAgICAgICAgaWYgbm90ICgwIDwgbWF4X3NhbXBsZXMgPCAxKToKICAgICAgICAgICAgbXNnID0gImBtYXhfc2FtcGxlc2AgbXVzdCBiZSBpbiByYW5nZSAoMCwgMSkgYnV0IGdvdCB2YWx1ZSB7fSIKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihtc2cuZm9ybWF0KG1heF9zYW1wbGVzKSkKICAgICAgICByZXR1cm4gaW50KHJvdW5kKG5fc2FtcGxlcyAqIG1heF9zYW1wbGVzKSkKCiAgICBtc2cgPSAiYG1heF9zYW1wbGVzYCBzaG91bGQgYmUgaW50IG9yIGZsb2F0LCBidXQgZ290IHR5cGUgJ3t9JyIKICAgIHJhaXNlIFR5cGVFcnJvcihtc2cuZm9ybWF0KHR5cGUobWF4X3NhbXBsZXMpKSkKCmRlZiBfZ2V0X3Vuc2FtcGxlZF9peChyYW5kb21fc3RhdGUsIG5fc2FtcGxlczogaW50KSAtPiBucC5hcnJheToKICAgICIiIgogICAgZnV0dXJlLXByb29mIGdldCB1bnNhbXBsZWQgaW5kaWNlcwogICAgIiIiCiAgICBuX2Jvb3RzdHJhcCA9IF9nZXRfbl9zYW1wbGVzX2Jvb3RzdHJhcChuX3NhbXBsZXMsIG5fc2FtcGxlcykKICAgIHJhbmRvbV9pbnN0YW5jZSA9IGNoZWNrX3JhbmRvbV9zdGF0ZShyYW5kb21fc3RhdGUpCiAgICBzYW1wbGVfaW5kaWNlcyA9IHJhbmRvbV9pbnN0YW5jZS5yYW5kaW50KDAsIG5fc2FtcGxlcywgbl9ib290c3RyYXApCiAgICBzYW1wbGVfY291bnRzID0gbnAuYmluY291bnQoc2FtcGxlX2luZGljZXMsIG1pbmxlbmd0aD1uX3NhbXBsZXMpCgogICAgcmV0dXJuIG5wLmFyYW5nZShuX3NhbXBsZXMpW3NhbXBsZV9jb3VudHM9PTBdCgpkZWYgX29vYl9jbGFzc2lmaWVyX2FjY3VyYWN5KHJmLCBYX3RyYWluLCB5X3RyYWluKSAtPiBmbG9hdDoKICAgICIiIgogICAgQ29tcHV0ZSBvdXQtb2YtYmFnIChPT0IpIGFjY3VyYWN5IGZvciBhIHNjaWtpdC1sZWFybiBmb3Jlc3QgY2xhc3NpZmllci4KICAgIAogICAgaHR0cHM6Ly9naXRodWIuY29tL3NjaWtpdC1sZWFybi9zY2lraXQtbGVhcm4vYmxvYi9hMjRjOGI0Ni9za2xlYXJuL2Vuc2VtYmxlL2ZvcmVzdC5weSNMNDI1CiAgICAiIiIKICAgIFggPSBYX3RyYWluLnZhbHVlcyBpZiBpc2luc3RhbmNlKFhfdHJhaW4sIHBkLkRhdGFGcmFtZSkgZWxzZSBYX3RyYWluCiAgICB5ID0geV90cmFpbi52YWx1ZXMgaWYgaXNpbnN0YW5jZSh5X3RyYWluLCBwZC5TZXJpZXMpIGVsc2UgeV90cmFpbgoKICAgIG5fc2FtcGxlcyA9IGxlbihYKQogICAgbl9jbGFzc2VzID0gbGVuKG5wLnVuaXF1ZSh5KSkKICAgIHByZWRpY3Rpb25zID0gbnAuemVyb3MoKG5fc2FtcGxlcywgbl9jbGFzc2VzKSkKICAgIGZvciB0cmVlIGluIHJmLmVzdGltYXRvcnNfOgogICAgICAgIHVuc2FtcGxlZF9pbmRpY2VzID0gX2dldF91bnNhbXBsZWRfaXgodHJlZS5yYW5kb21fc3RhdGUsIG5fc2FtcGxlcykKICAgICAgICB0cmVlX3ByZWRzID0gdHJlZS5wcmVkaWN0X3Byb2JhKFhbdW5zYW1wbGVkX2luZGljZXMsIDpdKQogICAgICAgIHByZWRpY3Rpb25zW3Vuc2FtcGxlZF9pbmRpY2VzXSArPSB0cmVlX3ByZWRzCgogICAgcHJlZGljdGVkX2NsYXNzX2luZGV4ZXMgPSBucC5hcmdtYXgocHJlZGljdGlvbnMsIGF4aXM9MSkKICAgIHByZWRpY3RlZF9jbGFzc2VzID0gW3JmLmNsYXNzZXNfW2ldIGZvciBpIGluIHByZWRpY3RlZF9jbGFzc19pbmRleGVzXQoKICAgIG9vYl9zY29yZSA9IG5wLm1lYW4oeSA9PSBwcmVkaWN0ZWRfY2xhc3NlcykKICAgIAogICAgcmV0dXJuIG9vYl9zY29yZQoKZGVmIHBlcm11dGF0aW9uX2ltcG9ydGFuY2VzKAogICAgY29udGV4dDogTUxDbGllbnRDdHgsCiAgICBtb2RlbDogRGF0YUl0ZW0sCiAgICBkYXRhc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsczogc3RyLAogICAgZmlnc3o9KDEwLCA1KSwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaXR5cGU6IHN0ciA9ICJwZXJtdXRlIgopIC0+IHBkLkRhdGFGcmFtZToKICAgICIiImNhbGN1bGF0ZSBjaGFuZ2UgaW4gbWV0cmljCiAgICAKICAgIHR5cGUgJ3Blcm11dGUnIHVzZXMgYSBwcmUtZXN0aW1hdGVkIG1vZGVsCiAgICB0eXBlICdkcm9wY29sJyB1c2VzIGEgcmUtZXN0aW1hdGVzIG1vZGVsCiAgICAKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgdGhlIGZ1bmN0aW9uJ3MgZXhlY3V0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbDogICAgICAgYSB0cmFpbmVkIG1vZGVsCiAgICA6cGFyYW0gZGF0YXNldDogICAgIGZlYXR1cmVzIGFuZCBncm91bmQgdHJ1dGhzLCByZWdyZXNzaW9uIHRhcmdldHMKICAgIDpwYXJhbSBsYWJlbHMgICAgICAgbmFtZSBvZiB0aGUgZ3JvdW5kIHRydXRocyBjb2x1bW4KICAgIDpwYXJhbSBmaWdzejogICAgICAgbWF0cGxvdGxpYiBmaWd1cmUgc2l6ZQogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICBwYXRoIHdpdGhpbiBhcnRpZmFjdCBzdG9yZQogICAgOgogICAgIiIiCiAgICBtb2RlbF9maWxlLCBtb2RlbF9kYXRhLCBfID0gZ2V0X21vZGVsKG1vZGVsLnVybCwgc3VmZml4PScucGtsJykKICAgIG1vZGVsID0gbG9hZChvcGVuKHN0cihtb2RlbF9maWxlKSwgInJiIikpCiAgICAKICAgIFggPSBkYXRhc2V0LmFzX2RmKCkKICAgIHkgPSBYLnBvcChsYWJlbHMpCiAgICBoZWFkZXIgPSBYLmNvbHVtbnMKICAgIAogICAgbWV0cmljID0gX29vYl9jbGFzc2lmaWVyX2FjY3VyYWN5CiAgICAKICAgIGJhc2VsaW5lID0gbWV0cmljKG1vZGVsLCBYLCB5KQogICAgCiAgICBpbXAgPSBbXQogICAgZm9yIGNvbCBpbiBYLmNvbHVtbnM6CiAgICAgICAgaWYgZml0eXBlIGlzICJwZXJtdXRlIjoKICAgICAgICAgICAgc2F2ZSA9IFhbY29sXS5jb3B5KCkKICAgICAgICAgICAgWFtjb2xdID0gbnAucmFuZG9tLnBlcm11dGF0aW9uKFhbY29sXSkKICAgICAgICAgICAgbSA9IG1ldHJpYyhtb2RlbCwgWCwgeSkKICAgICAgICAgICAgWFtjb2xdID0gc2F2ZQogICAgICAgICAgICBpbXAuYXBwZW5kKGJhc2VsaW5lIC0gbSkKICAgICAgICBlbGlmIGZpdHlwZSBpcyAiZHJvcGNvbCI6CiAgICAgICAgICAgIFhfID0gWC5kcm9wKGNvbCwgYXhpcz0xKQogICAgICAgICAgICBtb2RlbF8gPSBjbG9uZShtb2RlbCkKICAgICAgICAgICAgbW9kZWxfLnJhbmRvbV9zdGF0ZSA9IHJhbmRvbV9zdGF0ZQogICAgICAgICAgICBtb2RlbF8uZml0KFhfLCB5KQogICAgICAgICAgICBvID0gbW9kZWxfLm9vYl9zY29yZV8KICAgICAgICAgICAgaW1wLmFwcGVuZChiYXNlbGluZSAtIG8pCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigidW5rbm93biBmaXR5cGUsIG9ubHkgJ3Blcm11dGUnIG9yICdkcm9wY29sJyBwZXJtaXR0ZWQiKQoKICAgIHppcHBlZCA9IHppcChpbXAsIGhlYWRlcikKICAgIGZlYXR1cmVfaW1wID0gcGQuRGF0YUZyYW1lKHNvcnRlZCh6aXBwZWQpLCBjb2x1bW5zPVsiaW1wb3J0YW5jZSIsICJmZWF0dXJlIl0pCiAgICBmZWF0dXJlX2ltcC5zb3J0X3ZhbHVlcyhieT0iaW1wb3J0YW5jZSIsIGFzY2VuZGluZz1GYWxzZSwgaW5wbGFjZT1UcnVlKQoKICAgIHBsdC5jbGYoKQogICAgcGx0LmZpZ3VyZShmaWdzaXplPWZpZ3N6KQogICAgc25zLmJhcnBsb3QoeD0iaW1wb3J0YW5jZSIsIHk9ImZlYXR1cmUiLCBkYXRhPWZlYXR1cmVfaW1wKQogICAgcGx0LnRpdGxlKGYiZmVhdHVyZSBpbXBvcnRhbmNlcy17Zml0eXBlfSIpCiAgICBwbHQudGlnaHRfbGF5b3V0KCkKCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdChQbG90QXJ0aWZhY3QoZiJmZWF0dXJlIGltcG9ydGFuY2VzLXtmaXR5cGV9IiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9mZWF0dXJlLXBlcm11dGF0aW9ucy5odG1sIikKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoZiJmZWF0dXJlLWltcG9ydGFuY2VzLXtmaXR5cGV9LXRibCIsIGRmPWZlYXR1cmVfaW1wLCBpbmRleD1GYWxzZSkKCg==
    commands: []
    code_origin: https://github.com/yjb-ds/functions.git#f34c459cdf9407776340678d0f758d156cf55539:features.ipynb
