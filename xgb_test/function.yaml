kind: job
metadata:
  name: xgb-test
  tag: ''
  hash: fae9ecbe251c946e336f5371423024dcd08eb948
  project: ''
  labels:
    author: yjb
    framework: xgboost
  categories:
  - ml
  - test
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  env: []
  default_handler: xgb_test
  entry_points:
    xgb_test:
      name: xgb_test
      doc: "Test one or more classifier models against held-out dataset\n\nUsing held-out\
        \ test features, evaluates the peformance of the estimated model\n\nCan be\
        \ part of a kubeflow pipeline as a test step that is run post EDA and \ntraining/validation\
        \ cycles"
      parameters:
      - name: context
        doc: the function context
      - name: models_path
        type: DataItem
        doc: model artifact to be tested
      - name: test_set
        type: DataItem
        doc: test features and labels
      - name: label_column
        type: str
        doc: column name for ground truth labels
      - name: plots_dest
        type: str
        doc: dir for test plots
        default: plots
      - name: model_evaluator
        doc: 'WIP: specific method to generate eval, passed in as string or available
          in this folder'
      - name: default_model
        type: str
        doc: '''model.pkl'', default model artifact file name'
        default: model.pkl
      outputs: []
      lineno: 77
  description: test a classifier using held-out or new data
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCndhcm5pbmdzLnNpbXBsZWZpbHRlcihhY3Rpb249Imlnbm9yZSIsIGNhdGVnb3J5PUZ1dHVyZVdhcm5pbmcpCgppbXBvcnQgb3MKaW1wb3J0IHBhbmRhcyBhcyBwZApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbApmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBsb2FkCgp0cnk6CiAgICBmcm9tIG1sdXRpbHMgaW1wb3J0IGV2YWxfY2xhc3NfbW9kZWwKICAgIHYwNDcgPSBGYWxzZQpleGNlcHQgSW1wb3J0RXJyb3IgYXMgZToKICAgIGZyb20gbWxydW4ubWx1dGlscyBpbXBvcnQgZXZhbF9jbGFzc19tb2RlbCwgZ2NmX2NsZWFyCiAgICB2MDQ3ID0gVHJ1ZQoKZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgdXJsb3BlbgoKZGVmIF9wbG90X3JvYygKICAgIGNvbnRleHQsCiAgICB5X2xhYmVscywKICAgIHlfcHJvYnMsCiAgICBrZXk9InJvYyIsCiAgICBwbG90c19kaXI6IHN0ciA9ICJwbG90cyIsCiAgICBmbXQ9InBuZyIsCiAgICBmcHJfbGFiZWw6IHN0ciA9ICJmYWxzZSBwb3NpdGl2ZSByYXRlIiwKICAgIHRwcl9sYWJlbDogc3RyID0gInRydWUgcG9zaXRpdmUgcmF0ZSIsCiAgICB0aXRsZTogc3RyID0gInJvYyBjdXJ2ZSIsCiAgICBsZWdlbmRfbG9jOiBzdHIgPSAiYmVzdCIsCik6CiAgICAiIiJwbG90IHJvYyBjdXJ2ZXMgCiAgICAKICAgIHJlcGxhY2VzIGxlZ2FjeSB2ZXJzaW9uIG1scnVuICB2MC40LjcKICAgIAogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSB5X2xhYmVsczogICAgIGdyb3VuZCB0cnV0aCBsYWJlbHMsIGhvdCBlbmNvZGVkIGZvciBtdWx0aWNsYXNzCiAgICA6cGFyYW0geV9wcm9iczogICAgICBtb2RlbCBwcmVkaWN0aW9uIHByb2JhYmlsaXRpZXMKICAgIDpwYXJhbSBrZXk6ICAgICAgICAgICgicm9jIikga2V5IG9mIHBsb3QgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBwbG90c19kaXI6ICAgICgicGxvdHMiKSBkZXN0aW5hdGlvbiBmb2xkZXIgcmVsYXRpdmUgcGF0aCB0byBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gZm10OiAgICAgICAgICAoInBuZyIpIHBsb3QgZm9ybWF0CiAgICA6cGFyYW0gZnByX2xhYmVsOiAgICAoImZhbHNlIHBvc2l0aXZlIHJhdGUiKSB4LWF4aXMgbGFiZWxzCiAgICA6cGFyYW0gdHByX2xhYmVsOiAgICAoInRydWUgcG9zaXRpdmUgcmF0ZSIpIHktYXhpcyBsYWJlbHMKICAgIDpwYXJhbSB0aXRsZTogICAgICAgICgicm9jIGN1cnZlIikgdGl0bGUgb2YgcGxvdAogICAgOnBhcmFtIGxlZ2VuZF9sb2M6ICAgKCJiZXN0IikgbG9jYXRpb24gb2YgcGxvdCBsZWdlbmQKICAgICIiIgogICAgaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAogICAgZnJvbSBza2xlYXJuIGltcG9ydCBtZXRyaWNzCiAgICBmcm9tIG1scnVuLmFydGlmYWN0cyBpbXBvcnQgUGxvdEFydGlmYWN0CiAgICBnY2ZfY2xlYXIocGx0KQoKICAgIHBsdC5wbG90KFswLCAxXSwgWzAsIDFdLCAiay0tIikKCiAgICBwbHQueGxhYmVsKGZwcl9sYWJlbCkKICAgIHBsdC55bGFiZWwodHByX2xhYmVsKQogICAgcGx0LnRpdGxlKHRpdGxlKQogICAgcGx0LmxlZ2VuZChsb2M9bGVnZW5kX2xvYykKCiAgICBpZiB5X2xhYmVscy5uZGltID4gMToKICAgICAgICBmcHIgPSBkaWN0KCkKICAgICAgICB0cHIgPSBkaWN0KCkKICAgICAgICByb2NfYXVjID0gZGljdCgpCiAgICAgICAgZm9yIGkgaW4gcmFuZ2UoeV9sYWJlbHNbOiwgOi0xXS5zaGFwZVsxXSk6CiAgICAgICAgICAgIGZwcltpXSwgdHByW2ldLCBfID0gbWV0cmljcy5yb2NfY3VydmUoCiAgICAgICAgICAgICAgICB5X2xhYmVsc1s6LCBpXSwgeV9wcm9ic1s6LCBpXSwgcG9zX2xhYmVsPTEKICAgICAgICAgICAgKQogICAgICAgICAgICByb2NfYXVjW2ldID0gbWV0cmljcy5hdWMoZnByW2ldLCB0cHJbaV0pCiAgICAgICAgICAgIHBsdC5wbG90KGZwcltpXSwgdHByW2ldLCBsYWJlbD1mImNsYXNzIHtpfSIpCiAgICBlbHNlOgogICAgICAgIGZwciwgdHByLCBfID0gbWV0cmljcy5yb2NfY3VydmUoeV9sYWJlbHMsIHlfcHJvYnNbOiwgMV0sIHBvc19sYWJlbD0xKQogICAgICAgIHBsdC5wbG90KGZwciwgdHByLCBsYWJlbD1mInBvc2l0aXZlIGNsYXNzIikKCiAgICBmbmFtZSA9IGYie3Bsb3RzX2Rpcn0ve2tleX0uaHRtbCIKICAgIHJldHVybiBjb250ZXh0LmxvZ19hcnRpZmFjdChQbG90QXJ0aWZhY3Qoa2V5LCBib2R5PXBsdC5nY2YoKSksIGxvY2FsX3BhdGg9Zm5hbWUpCgpkZWYgeGdiX3Rlc3QoCiAgICBjb250ZXh0LAogICAgbW9kZWxzX3BhdGg6IERhdGFJdGVtLCAKICAgIHRlc3Rfc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsX2V2YWx1YXRvciA9IE5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIgopIC0+IE5vbmU6CiAgICAiIiJUZXN0IG9uZSBvciBtb3JlIGNsYXNzaWZpZXIgbW9kZWxzIGFnYWluc3QgaGVsZC1vdXQgZGF0YXNldAogICAgCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAogICAgCiAgICBDYW4gYmUgcGFydCBvZiBhIGt1YmVmbG93IHBpcGVsaW5lIGFzIGEgdGVzdCBzdGVwIHRoYXQgaXMgcnVuIHBvc3QgRURBIGFuZCAKICAgIHRyYWluaW5nL3ZhbGlkYXRpb24gY3ljbGVzCiAgICAKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICBtb2RlbCBhcnRpZmFjdCB0byBiZSB0ZXN0ZWQKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogV0lQOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gZGVmYXVsdF9tb2RlbDogICAnbW9kZWwucGtsJywgZGVmYXVsdCBtb2RlbCBhcnRpZmFjdCBmaWxlIG5hbWUKICAgICIiIgogICAgeHRlc3QgPSB0ZXN0X3NldC5hc19kZigpCiAgICB5dGVzdCA9IHh0ZXN0LnBvcChsYWJlbF9jb2x1bW4pCiAgICAKICAgIHRyeToKICAgICAgICBtb2RlbF9maWxlLCBtb2RlbF9vYmosIF8gPSBnZXRfbW9kZWwobW9kZWxzX3BhdGgudXJsLCBzdWZmaXg9Jy5wa2wnKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBWYWx1ZUVycm9yIGFzIHZhOiAKICAgICAgICBtb2RlbF9vYmogPSBsb2FkKHVybG9wZW4ob3MucGF0aC5qb2luKHN0cihtb2RlbHNfcGF0aCksIGRlZmF1bHRfbW9kZWwpKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBtaXNzcGVjaWZpZWQiKQoKICAgIGlmIG5vdCBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgaWYgdjA0NzoKICAgICAgICAgICAgeXByb2JzPW1vZGVsX29iai5wcmVkaWN0X3Byb2JhKHh0ZXN0KQogICAgICAgICAgICBfcGxvdF9yb2MoY29udGV4dCwgeXRlc3QsIHlwcm9icywga2V5PSJyb2MiLCBwbG90c19kaXI9cGxvdHNfZGVzdCkKICAgICAgICAgICAgZnJvbSBtbHJ1bi5tbHV0aWxzIGltcG9ydCBwbG90X2ltcG9ydGFuY2UKICAgICAgICAgICAgY29udGV4dC5oZWFkZXIgPSBsaXN0KHh0ZXN0LmNvbHVtbnMpCiAgICAgICAgICAgIHBsb3RfaW1wb3J0YW5jZShjb250ZXh0LCBtb2RlbF9vYmopCiAgICAgICAgICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfY2xhc3NfbW9kZWwoeHRlc3QsIHl0ZXN0LnZhbHVlcywgbW9kZWxfb2JqKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfY2xhc3NfbW9kZWwoY29udGV4dCwgeHRlc3QsIHl0ZXN0LCBtb2RlbF9vYmopCiAKICAgIGlmICJ0YWJsZXMiIGluIGV2YWxfbWV0cmljcy5rZXlzKCk6CiAgICAgICAgbW9kZWxfdGFibGVzID0gZXZhbF9tZXRyaWNzLnBvcCgidGFibGVzIikKICAgICAgICBmb3IgdGJsIGluIG1vZGVsX3RhYmxlczoKICAgICAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QodGJsLCBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L3t0Ymwua2V5fS5jc3YiKQoKICAgIG1vZGVsX3Bsb3RzID0gZXZhbF9tZXRyaWNzLnBvcCgicGxvdHMiKQogICAgZm9yIHBsb3QgaW4gbW9kZWxfcGxvdHM6CiAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QocGxvdCwgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdC5rZXl9Lmh0bWwiKQoKICAgIGNvbnRleHQubG9nX3Jlc3VsdHMoZXZhbF9tZXRyaWNzKQoK
    commands: []
    code_origin: https://github.com/yjb-ds/functions.git#f862aa40408127422ae0180104f51e28351969d0:xgb_test.ipynb
