kind: job
metadata:
  name: get-offline-features
  tag: ''
  hash: 5ac6c4e2b67440b464710c072708a3581125c2f8
  project: ''
  labels:
    author: yonish
  categories:
  - data-preparation
  - data-analysis
  - feature-store
spec:
  command: ''
  args: []
  image: mlrun/mlrun
  build:
    functionSourceCode: 
    commands: []
    code_origin: https://github.com/yonishelach/functions.git#82aab1724569d20c73cca114beb2fac0821d3383:/Users/Yonatan_Shelach/projects/functions/get_offline_features/get_offline_features.py
    origin_filename: /Users/Yonatan_Shelach/projects/functions/get_offline_features/get_offline_features.py
  entry_points:
    get_offline_features:
      name: get_offline_features
      doc: 'retrieve offline feature vector results


        specify a feature vector object/uri and retrieve the desired features, their
        metadata

        and statistics. returns :py:class:`~mlrun.feature_store.OfflineVectorResponse`,

        results can be returned as a dataframe or written to a target.

        If feature vector does not exist, a new one will be created and saved with
        the given features.


        The start_time and end_time attributes allow filtering the data to a given
        time range, they accept

        string values or pandas `Timestamp` objects, string values can also be relative,
        for example:

        "now", "now - 1d2h", "now+5m", where a valid pandas Timedelta string follows
        the verb "now",

        for time alignment you can use the verb "floor" e.g. "now -1d floor 1H" will
        align the time to the last hour

        (the floor string is passed to pandas.Timestamp.floor(), can use D, H, T,
        S for day, hour, min, sec alignment)'
      parameters:
      - name: context
        type: MLClientCtx
        doc: MLRun context
        default: ''
      - name: feature_vector
        type: str
        doc: feature vector uri
        default: ''
      - name: features
        type: Union[List[str], ]
        doc: Relevant only if feature_vector not exist. list of feature to collect
          to this vector format [<project>/]<feature_set>.<feature_name or *> [as
          <alias>]
        default: null
      - name: label_feature
        type: str
        doc: feature name to be used as label data
        default: null
      - name: description
        type: str
        doc: text description of the vector
        default: null
      - name: entity_rows
        type: DataItem
        doc: URI of the data entity rows to join with
        default: null
      - name: entity_timestamp_column
        type: str
        doc: timestamp column name in the entity rows dataframe
        default: null
      - name: target
        type: Union[str, Dict]
        doc: where to write the results to
        default: null
      - name: run_config
        type: Union[str, Dict]
        doc: function and/or run configuration see :py:class:`~mlrun.feature_store.RunConfig`
        default: null
      - name: drop_columns
        type: List[str]
        doc: list of columns to drop from the final result
        default: null
      - name: start_time
        type: str
        doc: datetime, low limit of time needed to be filtered. Optional entity_timestamp_column
          must be passed when using time filtering
        default: null
      - name: end_time
        type: str
        doc: datetime, high limit of time needed to be filtered. Optional entity_timestamp_column
          must be passed when using time filtering
        default: null
      - name: with_indexes
        type: bool
        doc: return vector with index columns (default False)
        default: false
      - name: update_stats
        type: bool
        doc: update features statistics from the requested feature sets on the vector.
          Default is False.
        default: false
      outputs:
      - default: ''
      lineno: 27
  description: retrieve offline feature vector results
  default_handler: get_offline_features
  disable_auto_mount: false
  env: []
  priority_class_name: ''
  preemption_mode: prevent
  affinity: null
  tolerations: null
  security_context: {}
verbose: false
