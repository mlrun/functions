kind: job
metadata:
  name: test-classifier
spec:
  build:
    functionSourceCode: aW1wb3J0IG9zCmltcG9ydCBpbXBvcnRsaWIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAoKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGxpZ2h0Z2JtIGFzIGxnYgoKZnJvbSBza2xlYXJuLm1ldHJpY3MgaW1wb3J0IChyb2NfY3VydmUsIGNvbmZ1c2lvbl9tYXRyaXgpCmZyb20gc2tsZWFybi5tb2RlbF9zZWxlY3Rpb24gaW1wb3J0IHRyYWluX3Rlc3Rfc3BsaXQKCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKZnJvbSBtYXRwbG90bGliLmZpZ3VyZSBpbXBvcnQgRmlndXJlCmltcG9ydCBzZWFib3JuIGFzIHNucwoKZnJvbSB0eXBpbmcgaW1wb3J0IE9wdGlvbmFsLCBVbmlvbiwgTGlzdAoKZnJvbSBtbHJ1bi5leGVjdXRpb24gaW1wb3J0IE1MQ2xpZW50Q3R4CmZyb20gbWxydW4uZGF0YXN0b3JlIGltcG9ydCBEYXRhSXRlbQpmcm9tIG1scnVuLmFydGlmYWN0cyBpbXBvcnQgVGFibGVBcnRpZmFjdCwgUGxvdEFydGlmYWN0CgoKZGVmIHRlc3RfbW9kZWwoCiAgICBjb250ZXh0OiBPcHRpb25hbFtNTENsaWVudEN0eF0sCiAgICBtb2RlbDogVW5pb25bRGF0YUl0ZW0sIHN0cl0sCiAgICB4dGVzdCwgCiAgICB5dGVzdCwKICAgIHRhcmdldF9wYXRoOiBzdHIgPSAnJywKICAgIG5hbWU6IHN0ciA9ICcnLAogICAga2V5OiBzdHIgPSAnJywKICAgIHJhbmRvbV9zdGF0ZSA9IDEKKSAtPiBOb25lOgogICAgIiIiVGVzdCBhIGNsYXNzaWZpZXIgbW9kZWwKICAgIAogICAgVXNpbmcgaGVsZC1vdXQgdGVzdCBmZWF0dXJlcywgY2FsbHMgYG1vZGVsLnByZWRpY3QoeHRlc3QpYCBhbmQgZXZhbHVhdGVzIHRoZSBhY2N1cmFjeSBvZiB0aGUgCiAgICBlc3RpbWF0ZWQgbW9kZWwuCiAgICAKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgb3IgY2FsbGVkCiAgICAKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWw6ICAgICAgICAgICBlc3RpbWF0ZWQgbW9kZWwgZmlsZSBuYW1lIGFzIGFydGlmYWN0IHN0b3JlIGl0ZW0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIHBpY2tsZSBmaWxlIG5hbWUKICAgIDpwYXJhbSB4dGVzdDogICAgICAgICAgIHRlc3QgZmVhdHVyZXMgZmlsZSBuYW1lIGFzIGFydGlmYWN0IHN0b3JlIGl0ZW0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIHBpY2tsZSBmaWxlIG5hbWUKICAgIDpwYXJhbSBoZWFkZXI6ICAgICAgICAgIChPcHRpb25hbCkgdXNlIGlmIHh0ZXN0IGRvZXMgbm90IGhhdmUgYSBoZWFkZXIKICAgIDpwYXJhbSB5dGVzdDogICAgICAgICAgIHRlc3QgbGFiZWxzIGZpbGUgbmFtZSBhcyBhcnRpZmFjdCBzdG9yZSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gb3IgcGlja2xlIGZpbGUgbmFtZQogICAgOnBhcmFtIHRhcmdldF9wYXRoOiAgICAgZm9sZGVyIGxvY2F0aW9uIG9mIGZpbGVzCiAgICA6cGFyYW0gbmFtZTogICAgICAgICAgICBkZXN0aW5hdGlvbiBuYW1lIGZvciB0ZXN0IHJlc3VsdHMKICAgIDpwYXJhbSBrZXk6ICAgICAgICAgICAgIGtleSBmb3IgbW9kZWwgYXJ0aWZhY3QKICAgICIiIgogICAgIyBsb2FkIG1vZGVsIGFuZCBkYXRhCiAgICBpZiBpc2luc3RhbmNlKG1vZGVsLCBEYXRhSXRlbSk6CiAgICAgICAgY2xmID0gbG9hZChvcGVuKHN0cihtb2RlbCksICdyYicpKQogICAgZWxzZToKICAgICAgICBjbGYgPSBsb2FkKG9wZW4obW9kZWwsICdyYicpKQoKICAgIGlmIGlzaW5zdGFuY2UoeHRlc3QsIERhdGFJdGVtKToKICAgICAgICB4dGVzdCA9IHBkLnJlYWRfcGFycXVldChzdHIoeHRlc3QpKQogICAgICAgIHl0ZXN0ID0gcGQucmVhZF9wYXJxdWV0KHN0cih5dGVzdCkpCiAgICBlbHNlOgogICAgICAgIHh0ZXN0ID0gcGQucmVhZF9wYXJxdWV0KHh0ZXN0KQogICAgICAgIHl0ZXN0ID0gcGQucmVhZF9wYXJxdWV0KHl0ZXN0KQogICAgCiAgICBpZiBjYWxsYWJsZShnZXRhdHRyKGNsZiwgJ3ByZWRpY3RfcHJvYmEnKSk6CiAgICAgICAgeXByZWRfcHJvYnMgPSBjbGYucHJlZGljdF9wcm9iYSh4dGVzdClbOiwgMV0KICAgICAgICB5cHJlZCA9IG5wLndoZXJlKHlwcmVkX3Byb2JzID49IDAuNSwgMSwgMCkKICAgICAgICBwbG90X3JvYyhjb250ZXh0LCB5dGVzdCwgeXByZWRfcHJvYnMsIHRhcmdldF9wYXRoKQogICAgZWxzZToKICAgICAgICB5cHJlZCA9IGNsZi5wcmVkaWN0KHh0ZXN0KQogICAgICAgIHlwcmVkX3Byb2JzID0gTm9uZQogICAgCiAgICBwbG90X2NvbmZ1c2lvbl9tYXRyaXgoY29udGV4dCwgeXRlc3QsIHlwcmVkLCB0YXJnZXRfcGF0aCkKCiAgICBpZiBoYXNhdHRyKGNsZiwgJ2ZlYXR1cmVfaW1wb3J0YW5jZXNfJyk6CiAgICAgICAgcGxvdF9pbXBvcnRhbmNlKGNvbnRleHQsIGNsZiwgeHRlc3QuY29sdW1ucy52YWx1ZXMsIHRhcmdldF9wYXRoKQoKZGVmIF9nY2ZfY2xlYXIocGx0KToKICAgIHBsdC5jbGEoKQogICAgcGx0LmNsZigpCiAgICBwbHQuY2xvc2UoKSAgICAgICAgCgpkZWYgcGxvdF9yb2MoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwgCiAgICB5X2xhYmVscywKICAgIHlfcHJvYnMsCiAgICB0YXJnZXRfcGF0aDogc3RyID0gJycsCiAgICBuYW1lPSdyb2MucG5nJywKICAgIGtleT0ncm9jJywKICAgIGZtdD0ncG5nJwopOgogICAgIiIiUGxvdCBhbiBST0MgY3VydmUgZnJvbSB0ZXN0IGRhdGEgc2F2ZWQgaW4gYW4gYXJ0aWZhY3Qgc3RvcmUuCiAgICAKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSB5X2xhYmVsczogICAgICAgIHRlc3QgZGF0YSBsYWJlbHMKICAgIDpwYXJhbSB5X3Byb2JzOiAgICAgICAgIHRlc3QgZGF0YSAKICAgICIiIgogICAgZnByX3hnLCB0cHJfeGcsIF8gPSByb2NfY3VydmUoeV9sYWJlbHMsIHlfcHJvYnMpCiAgICBwbHQucGxvdChbMCwgMV0sIFswLCAxXSwgImstLSIpCiAgICBwbHQucGxvdChmcHJfeGcsIHRwcl94ZywgbGFiZWw9InJvYyIpCiAgICBwbHQueGxhYmVsKCJmYWxzZSBwb3NpdGl2ZSByYXRlIikKICAgIHBsdC55bGFiZWwoInRydWUgcG9zaXRpdmUgcmF0ZSIpCiAgICBwbHQudGl0bGUoInJvYyBjdXJ2ZSIpCiAgICBwbHQubGVnZW5kKGxvYz0iYmVzdCIpCiAgICBmaWcgPSBwbHQuZ2NmKCkKCiAgICBwbG90cGF0aCA9IG9zLnBhdGguam9pbih0YXJnZXRfcGF0aCwgbmFtZSkKICAgIGZpZy5zYXZlZmlnKHBsb3RwYXRoLCBmb3JtYXQ9Zm10KQogICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoUGxvdEFydGlmYWN0KGtleSwgYm9keT1maWcpKQoKICAgIF9nY2ZfY2xlYXIocGx0KQoKZGVmIHBsb3RfY29uZnVzaW9uX21hdHJpeCgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LCAKICAgIGxhYmVscywgCiAgICBwcmVkaWN0aW9ucywKICAgIHRhcmdldF9wYXRoOiBzdHIgPSAnJywgCiAgICBuYW1lOiBzdHIgPSJjb25mdXNpb24ucG5nIiwgCiAgICBrZXk6IHN0ciA9J2NvbmZ1c2lvbl9tYXRyaXgnLAogICAgZm10OiBzdHIgPSAncG5nJwopOgogICAgIiIiQ3JlYXRlIGEgY29uZnVzaW9uIG1hdHJpeC4KICAgIFBsb3QgYW5kIHNhdmUgYSBjb25mdXNpb24gbWF0cml4IHVzaW5nIHRlc3QgZGF0YSBmcm9tIGEKICAgIHBpcGVsaW5lIHN0ZXAuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIGxhYmVsczogICAgICAgICAgdGVzdCBkYXRhIGxhYmVscwogICAgOnBhcmFtIHByZWRpY3Rpb25zOiAgICAgdGVzdCBkYXRhIHByZWRpY3Rpb25zCiAgICAiIiIKICAgIGNtID0gY29uZnVzaW9uX21hdHJpeChsYWJlbHMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVkaWN0aW9ucywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhbXBsZV93ZWlnaHQ9Tm9uZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vcm1hbGl6ZT0nYWxsJykKICAgIHNucy5oZWF0bWFwKGNtLCBhbm5vdD1UcnVlLCBjbWFwPSJCbHVlcyIpCiAgICBwbG90cGF0aCA9IG9zLnBhdGguam9pbih0YXJnZXRfcGF0aCwgbmFtZSkKICAgIGZpZyA9IHBsdC5nY2YoKQogICAgZmlnLnNhdmVmaWcocGxvdHBhdGgsIGZvcm1hdD1mbXQpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdChQbG90QXJ0aWZhY3Qoa2V5LCBib2R5PWZpZykpCgogICAgX2djZl9jbGVhcihwbHQpCgpkZWYgcGxvdF9pbXBvcnRhbmNlKAogICAgY29udGV4dCwKICAgIG1vZGVsLAogICAgaGVhZGVyOiBMaXN0ID0gW10sCiAgICB0YXJnZXRfcGF0aDogc3RyID0gJycsCiAgICBuYW1lOiBzdHIgPSAnZmVhdHVyZS1pbXBvcnRhbmNlcy5wbmcnLAogICAga2V5OiBzdHIgPSAnZmVhdHVyZS1pbXBvcnRhbmNlcycsCiAgICBmbXQgPSAncG5nJwopOgogICAgIiIiRGlzcGxheSBlc3RpbWF0ZWQgZmVhdHVyZSBpbXBvcnRhbmNlcy4KCiAgICA6cGFyYW0gY29udGV4dDogICAgIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbDogICAgICAgZml0dGVkIGxpZ2h0Z2JtIG1vZGVsCiAgICA6cGFyYW0gaGVhZGVyOiAgICAgIGxpc3Qgb2YgZmVhdHVyZSBuYW1lcwogICAgIiIiCiAgICAjIGNyZWF0ZSBhIGZlYXR1cmUgaW1wb3J0YW5jZSB0YWJsZSB3aXRoIGRlc2lyZWQgbGFiZWxzCiAgICB6aXBwZWQgPSB6aXAobW9kZWwuZmVhdHVyZV9pbXBvcnRhbmNlc18sIGhlYWRlcikKCiAgICBmZWF0dXJlX2ltcCA9IHBkLkRhdGFGcmFtZShzb3J0ZWQoemlwcGVkKSwgY29sdW1ucz1bJ2ZyZXEnLCdmZWF0dXJlJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLnNvcnRfdmFsdWVzKGJ5PSJmcmVxIiwgYXNjZW5kaW5nPUZhbHNlKQoKICAgIHBsdC5maWd1cmUoZmlnc2l6ZT0oMjAsIDEwKSkKICAgIHNucy5iYXJwbG90KHg9ImZyZXEiLCB5PSJmZWF0dXJlIiwgZGF0YT1mZWF0dXJlX2ltcCkKICAgIHBsdC50aXRsZSgnTGlnaHRHQk0gRmVhdHVyZXMnKQogICAgcGx0LnRpZ2h0X2xheW91dCgpCiAgICBmaWcgPSBwbHQuZ2NmKCkKICAgIHBsb3RwYXRoID0gb3MucGF0aC5qb2luKHRhcmdldF9wYXRoLCBuYW1lKQogICAgZmlnLnNhdmVmaWcocGxvdHBhdGgsIGZvcm1hdD0ncG5nJykKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KFBsb3RBcnRpZmFjdChrZXkgKyAnLXBsb3QnLCBib2R5PWZpZykpCgogICAgIyBmZWF0dXJlIGltcG9ydGFuY2VzIGFyZSBhbHNvIHNhdmVkIGFzIGEgdGFibGU6CiAgICB0YWJsZXBhdGggPSBvcy5wYXRoLmpvaW4odGFyZ2V0X3BhdGgsIGtleSArICctdGFibGUuY3N2JykKICAgIGZlYXR1cmVfaW1wLnRvX2Nzdih0YWJsZXBhdGgpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdChUYWJsZUFydGlmYWN0KGtleSArICctdGFibGUnLCB0YXJnZXRfcGF0aD10YWJsZXBhdGgpKQoKICAgICMgdG8gZW5zdXJlIHdlIGRvbid0IG92ZXJ3cml0ZSB0aGlzIGZpZ3VyZSB3aGVuIGNyZWF0aW5nIHRoZSBuZXh0OgogICAgX2djZl9jbGVhcihwbHQpCg==
    base_image: yjbds/mlrun-ds:latest
    commands: []
