kind: job
metadata:
  name: test-classifier
  tag: ''
  hash: b4d447a2328975e90a0dbc7a28f82009924cc157
  project: ''
  labels:
    author: yjb
    framework: sklearn
  categories:
  - machine-learning
  - model-testing
spec:
  command: ''
  args: []
  image: mlrun/mlrun
  env: []
  default_handler: test_classifier
  entry_points:
    test_classifier:
      name: test_classifier
      doc: 'Test one or more classifier models against held-out dataset


        Using held-out test features, evaluates the peformance of the estimated model


        Can be part of a kubeflow pipeline as a test step that is run post EDA and

        training/validation cycles'
      parameters:
      - name: context
        doc: the function context
        default: ''
      - name: models_path
        type: DataItem
        doc: artifact models representing a file or a folder
        default: ''
      - name: test_set
        type: DataItem
        doc: test features and labels
        default: ''
      - name: label_column
        type: str
        doc: column name for ground truth labels
        default: ''
      - name: score_method
        type: str
        doc: for multiclass classification
        default: micro
      - name: plots_dest
        type: str
        doc: dir for test plots
        default: ''
      - name: model_evaluator
        doc: 'NOT IMPLEMENTED: specific method to generate eval, passed in as string
          or available in this folder'
        default: null
      - name: default_model
        type: str
        default: model.pkl
      - name: predictions_column
        type: str
        doc: column name for the predictions column on the resulted artifact
        default: yscore
      - name: model_update
        doc: (True) update model, when running as stand alone no need in update
        default: true
      outputs:
      - default: ''
      lineno: 17
  description: test a classifier using held-out or new data
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK
    commands: []
    code_origin: https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/test_classifier/test_classifier.py
  affinity: null
verbose: false
