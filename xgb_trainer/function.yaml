kind: job
metadata:
  name: xgb-trainer
  tag: ''
  hash: e00c407f763defa7d632cea68ec442c96f80d37c
  project: ''
  labels:
    author: yjb
    framework: xgboost
  categories:
  - training
  - ml
spec:
  command: ''
  args: []
  image: mlrun/ml-models:0.4.7
  env: []
  default_handler: train_model
  entry_points:
    train_model:
      name: train_model
      doc: train an xgboost model.
      parameters:
      - name: context
        type: MLClientCtx
        doc: the function context
      - name: model_type
        type: str
        doc: the model type to train, 'classifier', 'regressor'...
      - name: dataset
        type: DataItem
        doc: ("data") name of raw data file
      - name: label_column
        type: str
        doc: ground-truth (y) labels
        default: labels
      - name: sample
        type: int
        doc: Selects the first n rows, or select a sample starting from the first.
          If negative <-1, select a random sample
        default: <_ast.USub object at 0x7f70662c5b70>
      - name: test_size
        type: float
        doc: (0.05) test set size
        default: 0.05
      - name: valid_size
        type: float
        doc: (0.75) Once the test set has been removed the training set gets this
          proportion.
        default: 0.75
      - name: random_state
        type: int
        doc: (1) sklearn rng seed
        default: 1
      - name: model_filename
        type: str
        doc: model file filename,  points to a directory
        default: xgb-model
      - name: models_dest
        type: str
        doc: destination subfolder for model artifacts
      - name: plots_dest
        type: str
        doc: destination subfolder for plot artifacts
      - name: score_method
        type: str
        default: micro
      - name: file_ext
        type: str
        doc: format for test_set_key hold out data
        default: parquet
      - name: model_pkg_file
        type: str
      outputs: []
      lineno: 55
  description: train any classifier using scikit-learn's API
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlciBvbiAyMDIwLTA1LTA0IDAwOjMyCgppbXBvcnQgd2FybmluZ3MKd2FybmluZ3Muc2ltcGxlZmlsdGVyKGFjdGlvbj0iaWdub3JlIiwgY2F0ZWdvcnk9RnV0dXJlV2FybmluZykKCmZyb20gIG1scnVuLm1sdXRpbHMgaW1wb3J0IChnZXRfc2FtcGxlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0X3NwbGl0cywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlbl9za2xlYXJuX21vZGVsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlX2NsYXNzLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWxfY2xhc3NfbW9kZWwpCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmRlZiBfZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlOiBzdHIsIHhnYl9wYXJhbXM6IGRpY3QpOgogICAgIiIiZ2VuZXJhdGUgYW4geGdib29zdCBtb2RlbAogICAgCiAgICBNdWx0aXBsZSBtb2RlbCB0eXBlcyB0aGF0IGNhbiBiZSBlc3RpbWF0ZWQgdXNpbmcKICAgIHRoZSBYR0Jvb3N0IFNjaWtpdC1MZWFybiBBUEkuCiAgICAKICAgIElucHV0IGNhbiBlaXRoZXIgYmUgYSBwcmVkZWZpbmVkIGpzb24gbW9kZWwgY29uZmlndXJhdGlvbiBvciBvbmUKICAgIG9mIHRoZSBmaXZlIHhnYm9vc3QgbW9kZWwgdHlwZXM6ICJjbGFzc2lmaWVyIiwgInJlZ3Jlc3NvciIsICJyYW5rZXIiLAogICAgInJmX2NsYXNzaWZpZXIiLCBvciAicmZfcmVncmVzc29yIi4KICAgIAogICAgSW4gZWl0aGVyIGNhc2Ugb25lIGNhbiBwYXNzIGluIGEgcGFyYW1zIGRpY3QgdG8gbW9kaWZ5IGRlZmF1bHRzIHZhbHVlcy4KICAgIAogICAgQmFzZWQgb24gYG1scnVuLm1sdXRpbHMubW9kZWxzLmdlbl9za2xlYXJuX21vZGVsYCwgc2VlIHRoZSBmdW5jdGlvbgogICAgYHNrbGVhcm5fY2xhc3NpZmllcmAgaW4gdGhpcyByZXBvc2l0b3J5LgogICAgCiAgICA6cGFyYW0gbW9kZWxfdHlwZTogb25lIG9mICJjbGFzc2lmaWVyIiwgInJlZ3Jlc3NvciIsCiAgICAgICAgICAgICAgICAgICAgICAgInJhbmtlciIsICJyZl9jbGFzc2lmaWVyIiwgb3IKICAgICAgICAgICAgICAgICAgICAgICJyZl9yZWdyZXNzb3IiCiAgICA6cGFyYW0geGdiX3BhcmFtczogY2xhc3MgaW5pdCBwYXJhbWV0ZXJzCiAgICAiIiIKICAgIGZyb20gbWxydW4ubWx1dGlscyBpbXBvcnQgZ2V0X2NsYXNzX2ZpdCwgZ2VuX3NrbGVhcm5fbW9kZWwKCiAgICBtdHlwZXMgPSB7CiAgICAgICAgImNsYXNzaWZpZXIiICAgOiAieGdib29zdC5YR0JDbGFzc2lmaWVyIiwKICAgICAgICAicmVncmVzc29yIiAgICA6ICJ4Z2Jvb3N0LlhHQlJlZ3Jlc3NvciIsCiAgICAgICAgInJhbmtlciIgICAgICAgOiAieGdib29zdC5YR0JSYW5rZXIiLAogICAgICAgICJyZl9jbGFzc2lmaWVyIjogInhnYm9vc3QuWEdCUkZDbGFzc2lmaWVyIiwKICAgICAgICAicmZfcmVncmVzc29yIiA6ICJ4Z2Jvb3N0LlhHQlJGUmVncmVzc29yIgogICAgfQogICAgaWYgbW9kZWxfdHlwZS5lbmRzd2l0aCgianNvbiIpOgogICAgICAgIG1vZGVsX2NvbmZpZyA9IG1vZGVsX3R5cGUKICAgIGVsaWYgbW9kZWxfdHlwZSBpbiBtdHlwZXMua2V5cygpOgogICAgICAgIG1vZGVsX2NvbmZpZyA9IG10eXBlc1ttb2RlbF90eXBlXQogICAgZWxzZToKICAgICAgICByYWlzZSBFeGNlcHRpb24oInVucmVjb2duaXplZCBtb2RlbCB0eXBlLCBzZWUgaGVscCBkb2N1bWVudGF0aW9uIikKCiAgICByZXR1cm4gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfY29uZmlnLCB4Z2JfcGFyYW1zKQoKZGVmIHRyYWluX21vZGVsKAogICAgY29udGV4dDogTUxDbGllbnRDdHgsCiAgICBtb2RlbF90eXBlOiBzdHIsCiAgICBkYXRhc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIsCiAgICBzYW1wbGU6IGludCA9IC0xLAogICAgdGVzdF9zaXplOiBmbG9hdCA9IDAuMDUsCiAgICB2YWxpZF9zaXplOiBmbG9hdCA9IDAuNzUsCiAgICByYW5kb21fc3RhdGU6IGludCA9IDEsCiAgICBtb2RlbF9maWxlbmFtZTogc3RyID0gInhnYi1tb2RlbCIsCiAgICBtb2RlbHNfZGVzdDogc3RyID0gIiIsCiAgICBwbG90c19kZXN0OiBzdHIgPSAiIiwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIGZpbGVfZXh0OiBzdHIgPSAicGFycXVldCIsCiAgICBtb2RlbF9wa2dfZmlsZTogc3RyID0gIiIsICAgIAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhbiB4Z2Jvb3N0IG1vZGVsLgoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbF90eXBlOiAgICAgICAgdGhlIG1vZGVsIHR5cGUgdG8gdHJhaW4sICdjbGFzc2lmaWVyJywgJ3JlZ3Jlc3NvcicuLi4KICAgIDpwYXJhbSBkYXRhc2V0OiAgICAgICAgICAgKCJkYXRhIikgbmFtZSBvZiByYXcgZGF0YSBmaWxlCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgIGdyb3VuZC10cnV0aCAoeSkgbGFiZWxzCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSBtb2RlbF9maWxlbmFtZTogICAgbW9kZWwgZmlsZSBmaWxlbmFtZSwgIHBvaW50cyB0byBhIGRpcmVjdG9yeQogICAgOnBhcmFtIHRlc3Rfc2l6ZTogICAgICAgICAoMC4wNSkgdGVzdCBzZXQgc2l6ZQogICAgOnBhcmFtIHZhbGlkX3NpemU6ICAgICAgICAoMC43NSkgT25jZSB0aGUgdGVzdCBzZXQgaGFzIGJlZW4gcmVtb3ZlZCB0aGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhaW5pbmcgc2V0IGdldHMgdGhpcyBwcm9wb3J0aW9uLgogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAogICAgOnBhcmFtIG1vZGVsc19kZXN0OiAgICAgICBkZXN0aW5hdGlvbiBzdWJmb2xkZXIgZm9yIG1vZGVsIGFydGlmYWN0cwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgICBkZXN0aW5hdGlvbiBzdWJmb2xkZXIgZm9yIHBsb3QgYXJ0aWZhY3RzCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgIGZvcm1hdCBmb3IgdGVzdF9zZXRfa2V5IGhvbGQgb3V0IGRhdGEKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWxzIgogICAgcGxvdHNfZGVzdCA9IHBsb3RzX2Rlc3Qgb3IgZiJwbG90cy97Y29udGV4dC5uYW1lfSIKICAgIAogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCiAgICAKICAgICh4dHJhaW4seXRyYWluKSwgKHh2YWxpZCx5dmFsaWQpLCAgICAgKHh0ZXN0LHl0ZXN0KSwgKHhjYWwsIHljYWwpID0gZ2V0X3NwbGl0cygKICAgICAgICByYXcsIGxhYmVscywgNCwKICAgICAgICB0ZXN0X3NpemUsIAogICAgICAgIHZhbGlkX3NpemUsIAogICAgICAgIFsibGFiZWxzIl0sCiAgICAgICAgcmFuZG9tX3N0YXRlKQogICAgCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0LXNldCIsIGRmPXBkLmNvbmNhdChbeHRlc3QsIHl0ZXN0XSkpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJjYWwtc2V0IiwgZGY9cGQuY29uY2F0KFt4Y2FsLCB5Y2FsXSkpCiAgICAKICAgIG1vZGVsX2NvbmZpZyA9IF9nZW5feGdiX21vZGVsKG1vZGVsX3R5cGUsIGNvbnRleHQucGFyYW1ldGVycy5pdGVtcygpKQogICAgbW9kZWxfc2hvcnRfbmFtZSA9IG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdLnNwbGl0KCcuJylbLTFdCiAgIAogICAgWEdCQm9vc3RDbGFzcyA9IGNyZWF0ZV9jbGFzcyhtb2RlbF9jb25maWdbIk1FVEEiXVsiY2xhc3MiXSkKICAgIG1vZGVsID0gWEdCQm9vc3RDbGFzcygqKm1vZGVsX2NvbmZpZ1siQ0xBU1MiXSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sInkiOiB5dHJhaW4udmFsdWVzfSkKICAgIAogICAgbW9kZWwuZml0KCoqbW9kZWxfY29uZmlnWyJGSVQiXSkKCiAgICBldmFsX21ldHJpY3MgPSBldmFsX2NsYXNzX21vZGVsKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbCwgcGxvdHNfZGVzdCkKICAgIG1vZGVsX3Bsb3RzID0gZXZhbF9tZXRyaWNzLnBvcCgicGxvdHMiKQogICAgICAgIAogICAgbW9kZWxfYmluID0gZHVtcHMobW9kZWwuZ2V0X2Jvb3N0ZXIoKSkKICAgIGNvbnRleHQubG9nX21vZGVsKG1vZGVsX3Nob3J0X25hbWUsIGJvZHk9bW9kZWxfYmluLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2Rpcj0ibW9kZWxzIiwgCiAgICAgICAgICAgICAgICAgICAgICBtb2RlbF9maWxlPSd4Z2ItdHJhaW5lci1tb2RlbC5wa2wnLAogICAgICAgICAgICAgICAgICAgICAgbWV0cmljcz1ldmFsX21ldHJpY3MpCiAgICBjb250ZXh0LmxvZ19yZXN1bHRzKGV2YWxfbWV0cmljcykKCg==
    commands: []
    code_origin: https://github.com/yjb-ds/functions.git#8ad7bc969302d0a56278883c0fb61cd46d8a97e6:xgb_trainer.ipynb
