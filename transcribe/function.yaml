kind: job
metadata:
  name: transcribe
  tag: ''
  hash: a52cc05276bdfd4d8c9bfa0370fe7635370d73dc
  project: ''
  labels:
    author: yonatans
  categories:
  - data-preparation
  - machine-learning
spec:
  command: ''
  args: []
  image: ''
  build:
    functionSourceCode: IyBDb3B5cmlnaHQgMjAxOSBJZ3VhemlvCiMKIyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKIyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiMgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiMKIyAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiMKIyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKIyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KIyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiMgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiMKCmltcG9ydCBwYXRobGliCmltcG9ydCB0ZW1wZmlsZQpmcm9tIHR5cGluZyBpbXBvcnQgTGl0ZXJhbCwgVHVwbGUKCmltcG9ydCBsaWJyb3NhCmltcG9ydCBtbHJ1bgppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCB3aGlzcGVyCmZyb20gdHFkbS5hdXRvIGltcG9ydCB0cWRtCgoKZGVmIHRyYW5zY3JpYmUoCiAgICBjb250ZXh0OiBtbHJ1bi5NTENsaWVudEN0eCwKICAgIGlucHV0X3BhdGg6IHN0ciwKICAgIG1vZGVsX25hbWU6IHN0ciA9ICJiYXNlIiwKICAgIGRldmljZTogTGl0ZXJhbFsiY3VkYSIsICJjcHUiXSA9IE5vbmUsCiAgICBkZWNvZGluZ19vcHRpb25zOiBkaWN0ID0gTm9uZSwKICAgIG91dHB1dF9kaXJlY3Rvcnk6IHN0ciA9IE5vbmUsCikgLT4gVHVwbGVbcGF0aGxpYi5QYXRoLCBwZC5EYXRhRnJhbWUsIGRpY3RdOgogICAgIiIiCiAgICBUcmFuc2NyaWJlIGF1ZGlvIGZpbGVzIGludG8gdGV4dCBmaWxlcyBhbmQgY29sbGVjdCBhZGRpdGlvbmFsIGRhdGEuCiAgICBUaGUgZW5kIHJlc3VsdCBpcyBhIGRpcmVjdG9yeSBvZiB0cmFuc2NyaWJlZCB0ZXh0IGZpbGVzCiAgICAgYW5kIGEgZGF0YWZyYW1lIGNvbnRhaW5pbmcgdGhlIGZvbGxvd2luZyBjb2x1bW5zOgoKICAgICogYXVkaW9fZmlsZSAtIFRoZSBvcmlnaW5hbCBhdWRpbyBmaWxlIG5hbWUuCiAgICAqIHRyYW5zY3JpcHRpb25fZmlsZSAtIFRoZSB0cmFuc2NyaWJlZCB0ZXh0IGZpbGUgbmFtZSBpbiB0aGUgb3V0cHV0IGRpcmVjdG9yeS4KICAgICogbGFuZ3VhZ2UgLSBUaGUgZGV0ZWN0ZWQgbGFuZ3VhZ2UgaW4gdGhlIGF1ZGlvIGZpbGUuCiAgICAqIGxlbmd0aCAtIFRoZSBsZW5ndGggb2YgdGhlIGF1ZGlvIGZpbGUuCiAgICAqIHJhdGVfb2Zfc3BlZWNoIC0gVGhlIG51bWJlciBvZiB3b3JkcyBkaXZpZGVkIGJ5IHRoZSBhdWRpbyBmaWxlIGxlbmd0aC4KCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgICAgICBNTFJ1biBjb250ZXh0LgogICAgOnBhcmFtIGlucHV0X3BhdGg6ICAgICAgICAgICAgQSBkaXJlY3Rvcnkgb2YgdGhlIGF1ZGlvIGZpbGVzIG9yIGEgc2luZ2xlIGZpbGUgdG8gdHJhbnNjcmliZS4KICAgIDpwYXJhbSBvdXRwdXRfZGlyZWN0b3J5OiAgICAgIFBhdGggdG8gYSBkaXJlY3RvcnkgdG8gc2F2ZSBhbGwgdHJhbnNjcmliZWQgYXVkaW8gZmlsZXMuCiAgICA6cGFyYW0gbW9kZWxfbmFtZTogICAgICAgICAgICBPbmUgb2YgdGhlIG9mZmljaWFsIG1vZGVsIG5hbWVzIGxpc3RlZCBieSBgd2hpc3Blci5hdmFpbGFibGVfbW9kZWxzKClgLgogICAgOnBhcmFtIGRldmljZTogICAgICAgICAgICAgICAgRGV2aWNlIHRvIGxvYWQgdGhlIG1vZGVsLiBDYW4gYmUgb25lIG9mIHsiY3VkYSIsICJjcHUifS4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHQgd2lsbCBwcmVmZXIgImN1ZGEiIGlmIGF2YWlsYWJsZS4KICAgIDpwYXJhbSBkZWNvZGluZ19vcHRpb25zOiAgICAgIEEgZGljdGlvbmFyeSBvZiBvcHRpb25zIHRvIGNvbnN0cnVjdCBhIGB3aGlzcGVyLkRlY29kaW5nT3B0aW9uc2AuCgogICAgOnJldHVybnM6IEEgdHVwbGUgb2Y6CgogICAgICAgICAgICAgICogUGF0aCB0byB0aGUgb3V0cHV0IGRpcmVjdG9yeS4KICAgICAgICAgICAgICAqIEEgZGF0YWZyYW1lIGRhdGFzZXQgb2YgdGhlIHRyYW5zY3JpYmVkIGZpbGUgbmFtZXMuCiAgICAgICAgICAgICAgKiBBIGRpY3Rpb25hcnkgb2YgZXJyb3JlZCBmaWxlcyB0aGF0IHdlcmUgbm90IHRyYW5zY3JpYmVkLgogICAgIiIiCiAgICAjIFNldCBvdXRwdXQgZGlyZWN0b3J5OgogICAgaWYgb3V0cHV0X2RpcmVjdG9yeSBpcyBOb25lOgogICAgICAgIG91dHB1dF9kaXJlY3RvcnkgPSB0ZW1wZmlsZS5ta2R0ZW1wKCkKCiAgICAjIExvYWQgdGhlIG1vZGVsOgogICAgY29udGV4dC5sb2dnZXIuaW5mbyhmIkxvYWRpbmcgd2hpc3BlciBtb2RlbDogJ3ttb2RlbF9uYW1lfSciKQogICAgbW9kZWwgPSB3aGlzcGVyLmxvYWRfbW9kZWwobW9kZWxfbmFtZSwgZGV2aWNlPWRldmljZSkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIk1vZGVsIGxvYWRlZC4iKQoKICAgICMgUHJlcGFyZSB0aGUgZGF0YWZyYW1lIGFuZCBlcnJvcnMgdG8gYmUgcmV0dXJuZWQ6CiAgICBkZiA9IHBkLkRhdGFGcmFtZSgKICAgICAgICBjb2x1bW5zPVsKICAgICAgICAgICAgImF1ZGlvX2ZpbGUiLAogICAgICAgICAgICAidHJhbnNjcmlwdGlvbl9maWxlIiwKICAgICAgICAgICAgImxhbmd1YWdlIiwKICAgICAgICAgICAgImxlbmd0aCIsCiAgICAgICAgICAgICJyYXRlX29mX3NwZWVjaCIsCiAgICAgICAgXQogICAgKQogICAgZXJyb3JzID0ge30KCiAgICAjIENyZWF0ZSB0aGUgb3V0cHV0IGRpcmVjdG9yeToKICAgIG91dHB1dF9kaXJlY3RvcnkgPSBwYXRobGliLlBhdGgob3V0cHV0X2RpcmVjdG9yeSkKICAgIGlmIG5vdCBvdXRwdXRfZGlyZWN0b3J5LmV4aXN0cygpOgogICAgICAgIG91dHB1dF9kaXJlY3RvcnkubWtkaXIoKQoKICAgICMgR28gb3ZlciB0aGUgYXVkaW8gZmlsZXMgYW5kIHRyYW5zY3JpYmU6CiAgICBhdWRpb19maWxlc19wYXRoID0gcGF0aGxpYi5QYXRoKGlucHV0X3BhdGgpLmFic29sdXRlKCkKICAgIGlzX2RpciA9IFRydWUKICAgIGlmIGF1ZGlvX2ZpbGVzX3BhdGguaXNfZGlyKCk6CiAgICAgICAgYXVkaW9fZmlsZXMgPSBsaXN0KGF1ZGlvX2ZpbGVzX3BhdGgucmdsb2IoIiouKiIpKQogICAgZWxpZiBhdWRpb19maWxlc19wYXRoLmlzX2ZpbGUoKToKICAgICAgICBpc19kaXIgPSBGYWxzZQogICAgICAgIGF1ZGlvX2ZpbGVzID0gW2F1ZGlvX2ZpbGVzX3BhdGhdCiAgICBlbHNlOgogICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoCiAgICAgICAgICAgIGYiYXVkaW9fZmlsZXMge3N0cihhdWRpb19maWxlc19wYXRoKX0gbXVzdCBiZSBlaXRoZXIgYSBkaXJlY3RvcnkgcGF0aCBvciBhIGZpbGUgcGF0aCIKICAgICAgICApCgogICAgZm9yIGksIGF1ZGlvX2ZpbGUgaW4gZW51bWVyYXRlKHRxZG0oYXVkaW9fZmlsZXMsIGRlc2M9IlRyYW5zY3JpYmluZyIsIHVuaXQ9ImZpbGUiKSk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICB0cmFuc2NyaXB0aW9uLCBsZW5ndGgsIHJhdGVfb2Zfc3BlZWNoLCBsYW5ndWFnZSA9IF9zaW5nbGVfdHJhbnNjcmliZSgKICAgICAgICAgICAgICAgIGF1ZGlvX2ZpbGU9YXVkaW9fZmlsZSwKICAgICAgICAgICAgICAgIG1vZGVsPW1vZGVsLAogICAgICAgICAgICAgICAgZGVjb2Rpbmdfb3B0aW9ucz1kZWNvZGluZ19vcHRpb25zLAogICAgICAgICAgICApCgogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZXhjZXB0aW9uOgogICAgICAgICAgICAjIENvbGxlY3QgdGhlIGV4Y2VwdGlvbjoKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkVycm9yIGluIGZpbGU6ICd7YXVkaW9fZmlsZX0nIikKICAgICAgICAgICAgZXJyb3JzW3N0cihhdWRpb19maWxlKV0gPSBzdHIoZXhjZXB0aW9uKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMgV3JpdGUgdGhlIHRyYW5zY3JpcHRpb24gdG8gZmlsZToKICAgICAgICAgICAgc2F2ZWRfZmlsZW5hbWUgPSAoCiAgICAgICAgICAgICAgICBzdHIoYXVkaW9fZmlsZS5yZWxhdGl2ZV90byhhdWRpb19maWxlc19wYXRoKSkuc3BsaXQoIi4iKVswXQogICAgICAgICAgICAgICAgaWYgaXNfZGlyCiAgICAgICAgICAgICAgICBlbHNlIGF1ZGlvX2ZpbGUuc3RlbQogICAgICAgICAgICApCiAgICAgICAgICAgIHRyYW5zY3JpcHRpb25fZmlsZSA9IG91dHB1dF9kaXJlY3RvcnkgLyBmIntzYXZlZF9maWxlbmFtZX0udHh0IgogICAgICAgICAgICB0cmFuc2NyaXB0aW9uX2ZpbGUucGFyZW50Lm1rZGlyKGV4aXN0X29rPVRydWUsIHBhcmVudHM9VHJ1ZSkKICAgICAgICAgICAgd2l0aCBvcGVuKHRyYW5zY3JpcHRpb25fZmlsZSwgInciKSBhcyBmcDoKICAgICAgICAgICAgICAgIGZwLndyaXRlKHRyYW5zY3JpcHRpb24pCgogICAgICAgICAgICAjIE5vdGUgaW4gdGhlIGRhdGFmcmFtZToKICAgICAgICAgICAgZGYubG9jW2kgLSBsZW4oZXJyb3JzKV0gPSBbCiAgICAgICAgICAgICAgICBzdHIoYXVkaW9fZmlsZS5yZWxhdGl2ZV90byhhdWRpb19maWxlc19wYXRoKSksCiAgICAgICAgICAgICAgICBzdHIodHJhbnNjcmlwdGlvbl9maWxlLnJlbGF0aXZlX3RvKG91dHB1dF9kaXJlY3RvcnkpKSwKICAgICAgICAgICAgICAgIGxhbmd1YWdlLAogICAgICAgICAgICAgICAgbGVuZ3RoLAogICAgICAgICAgICAgICAgcmF0ZV9vZl9zcGVlY2gsCiAgICAgICAgICAgIF0KICAgICMgUmV0dXJuIHRoZSBkYXRhZnJhbWU6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYiRG9uZTpcbntkZi5oZWFkKCl9IikKCiAgICByZXR1cm4gb3V0cHV0X2RpcmVjdG9yeSwgZGYsIGVycm9ycwoKCmRlZiBfc2luZ2xlX3RyYW5zY3JpYmUoCiAgICBhdWRpb19maWxlOiBwYXRobGliLlBhdGgsCiAgICBtb2RlbDogd2hpc3Blci5XaGlzcGVyLAogICAgZGVjb2Rpbmdfb3B0aW9uczogZGljdCA9IE5vbmUsCikgLT4gVHVwbGVbc3RyLCBpbnQsIGZsb2F0LCBzdHJdOgogICAgZGVjb2Rpbmdfb3B0aW9ucyA9IGRlY29kaW5nX29wdGlvbnMgb3IgZGljdCgpCiAgICAjIExvYWQgdGhlIGF1ZGlvOgogICAgYXVkaW8gPSB3aGlzcGVyLmF1ZGlvLmxvYWRfYXVkaW8oZmlsZT1zdHIoYXVkaW9fZmlsZSkpCiAgICAjIEdldCBhdWRpbyBsZW5ndGg6CiAgICBsZW5ndGggPSBsaWJyb3NhLmdldF9kdXJhdGlvbihwYXRoPWF1ZGlvX2ZpbGUpCiAgICAjIFRyYW5zY3JpYmU6CiAgICByZXN1bHQgPSBtb2RlbC50cmFuc2NyaWJlKGF1ZGlvPWF1ZGlvLCAqKmRlY29kaW5nX29wdGlvbnMpCiAgICAjIFVucGFjayB0aGUgbW9kZWwncyByZXN1bHQ6CiAgICB0cmFuc2NyaXB0aW9uID0gcmVzdWx0WyJ0ZXh0Il0KICAgIGxhbmd1YWdlID0gcmVzdWx0LmdldCgibGFuZ3VhZ2UiKSBvciBkZWNvZGluZ19vcHRpb25zLmdldCgibGFuZ3VhZ2UiLCAiIikKCiAgICAjIENhbGN1bGF0ZSByYXRlIG9mIHNwZWVjaCAobnVtYmVyIG9mIHdvcmRzIC8gYXVkaW8gbGVuZ3RoKToKICAgIHJhdGVfb2Zfc3BlZWNoID0gbGVuKHRyYW5zY3JpcHRpb24uc3BsaXQoKSkgLyBsZW5ndGgKCiAgICByZXR1cm4gdHJhbnNjcmlwdGlvbiwgbGVuZ3RoLCByYXRlX29mX3NwZWVjaCwgbGFuZ3VhZ2UK
    base_image: mlrun/mlrun
    commands: []
    code_origin: https://github.com/yonishelach/functions.git#50616d2e17cdee78dbb3da719d673f0e76ad4008:/Users/Yonatan_Shelach/projects/functions/transcribe/transcribe.py
    origin_filename: /Users/Yonatan_Shelach/projects/functions/transcribe/transcribe.py
    requirements:
    - openai-whisper
    - tqdm
  entry_points:
    transcribe:
      name: transcribe
      doc: "Transcribe audio files into text files and collect additional data.\n\
        The end result is a directory of transcribed text files\n and a dataframe\
        \ containing the following columns:\n\n* audio_file - The original audio file\
        \ name.\n* transcription_file - The transcribed text file name in the output\
        \ directory.\n* language - The detected language in the audio file.\n* length\
        \ - The length of the audio file.\n* rate_of_speech - The number of words\
        \ divided by the audio file length."
      parameters:
      - name: context
        type: MLClientCtx
        doc: MLRun context.
        default: ''
      - name: input_path
        type: str
        doc: A directory of the audio files or a single file to transcribe.
        default: ''
      - name: model_name
        type: str
        doc: One of the official model names listed by `whisper.available_models()`.
        default: base
      - name: device
        type: Literal[, ]
        doc: Device to load the model. Can be one of {"cuda", "cpu"}. Default will
          prefer "cuda" if available.
        default: null
      - name: decoding_options
        type: dict
        doc: A dictionary of options to construct a `whisper.DecodingOptions`.
        default: null
      - name: output_directory
        type: str
        doc: Path to a directory to save all transcribed audio files.
        default: null
      outputs:
      - default: ''
        doc: 'A tuple of:'
      lineno: 27
  description: Transcribe audio files into text files
  default_handler: transcribe
  disable_auto_mount: false
  clone_target_dir: ''
  env: []
  priority_class_name: ''
  preemption_mode: prevent
  affinity: null
  tolerations: null
  security_context: {}
verbose: false
