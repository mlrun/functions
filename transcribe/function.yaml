kind: job
metadata:
  name: transcribe
  tag: ''
  hash: 3c3e9c7946d5a4dff3f9774bd1558e2bc06ba3d4
  project: ''
  labels:
    author: yonatans
  categories:
  - data-preparation
  - machine-learning
spec:
  command: ''
  args: []
  image: ''
  build:
    functionSourceCode: IyBDb3B5cmlnaHQgMjAxOSBJZ3VhemlvCiMKIyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKIyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiMgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiMKIyAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiMKIyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKIyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KIyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiMgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiMKCmltcG9ydCBwYXRobGliCmltcG9ydCB0ZW1wZmlsZQpmcm9tIHR5cGluZyBpbXBvcnQgTGl0ZXJhbCwgVHVwbGUsIFVuaW9uCgppbXBvcnQgbWxydW4KaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IHdoaXNwZXIKZnJvbSBtdXRhZ2VuLm1wMyBpbXBvcnQgTVAzCmZyb20gdHFkbS5hdXRvIGltcG9ydCB0cWRtCgoKZGVmIHRyYW5zY3JpYmUoCiAgICBjb250ZXh0OiBtbHJ1bi5NTENsaWVudEN0eCwKICAgIGF1ZGlvX2ZpbGVzX2RpcmVjdG9yeTogc3RyLAogICAgbW9kZWxfbmFtZTogc3RyID0gImJhc2UiLAogICAgZGV2aWNlOiBMaXRlcmFsWyJjdWRhIiwgImNwdSJdID0gTm9uZSwKICAgIGRlY29kaW5nX29wdGlvbnM6IGRpY3QgPSBOb25lLAogICAgb3V0cHV0X2RpcmVjdG9yeTogc3RyID0gTm9uZSwKKSAtPiBUdXBsZVtwYXRobGliLlBhdGgsIHBkLkRhdGFGcmFtZSwgZGljdF06CiAgICAiIiIKICAgIFRyYW5zY3JpYmUgYXVkaW8gZmlsZXMgaW50byB0ZXh0IGZpbGVzIGFuZCBjb2xsZWN0IGFkZGl0aW9uYWwgZGF0YS4KICAgIFRoZSBlbmQgcmVzdWx0IGlzIGEgZGlyZWN0b3J5IG9mIHRyYW5zY3JpYmVkIHRleHQgZmlsZXMKICAgICBhbmQgYSBkYXRhZnJhbWUgY29udGFpbmluZyB0aGUgZm9sbG93aW5nIGNvbHVtbnM6CgogICAgKiBhdWRpb19maWxlIC0gVGhlIG9yaWdpbmFsIGF1ZGlvIGZpbGUgbmFtZS4KICAgICogdHJhbnNjcmlwdGlvbl9maWxlIC0gVGhlIHRyYW5zY3JpYmVkIHRleHQgZmlsZSBuYW1lIGluIHRoZSBvdXRwdXQgZGlyZWN0b3J5LgogICAgKiBsYW5ndWFnZSAtIFRoZSBkZXRlY3RlZCBsYW5ndWFnZSBpbiB0aGUgYXVkaW8gZmlsZS4KICAgICogbGVuZ3RoIC0gVGhlIGxlbmd0aCBvZiB0aGUgYXVkaW8gZmlsZS4KICAgICogcmF0ZV9vZl9zcGVlY2ggLSBUaGUgbnVtYmVyIG9mIHdvcmRzIGRpdmlkZWQgYnkgdGhlIGF1ZGlvIGZpbGUgbGVuZ3RoLgoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgICAgIE1MUnVuIGNvbnRleHQuCiAgICA6cGFyYW0gYXVkaW9fZmlsZXNfZGlyZWN0b3J5OiBBIGRpcmVjdG9yeSBvZiB0aGUgYXVkaW8gZmlsZXMgb3IgYSBzaW5nbGUgZmlsZSB0byB0cmFuc2NyaWJlLgogICAgOnBhcmFtIG91dHB1dF9kaXJlY3Rvcnk6ICAgICAgUGF0aCB0byBhIGRpcmVjdG9yeSB0byBzYXZlIGFsbCB0cmFuc2NyaWJlZCBhdWRpbyBmaWxlcy4KICAgIDpwYXJhbSBtb2RlbF9uYW1lOiAgICAgICAgICAgIE9uZSBvZiB0aGUgb2ZmaWNpYWwgbW9kZWwgbmFtZXMgbGlzdGVkIGJ5IGB3aGlzcGVyLmF2YWlsYWJsZV9tb2RlbHMoKWAuCiAgICA6cGFyYW0gZGV2aWNlOiAgICAgICAgICAgICAgICBEZXZpY2UgdG8gbG9hZCB0aGUgbW9kZWwuIENhbiBiZSBvbmUgb2YgeyJjdWRhIiwgImNwdSJ9LgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdCB3aWxsIHByZWZlciAiY3VkYSIgaWYgYXZhaWxhYmxlLgogICAgOnBhcmFtIGRlY29kaW5nX29wdGlvbnM6ICAgICAgQSBkaWN0aW9uYXJ5IG9mIG9wdGlvbnMgdG8gY29uc3RydWN0IGEgYHdoaXNwZXIuRGVjb2RpbmdPcHRpb25zYC4KCiAgICA6cmV0dXJuczogQSB0dXBsZSBvZjoKCiAgICAgICAgICAgICAgKiBQYXRoIHRvIHRoZSBvdXRwdXQgZGlyZWN0b3J5LgogICAgICAgICAgICAgICogQSBkYXRhZnJhbWUgZGF0YXNldCBvZiB0aGUgdHJhbnNjcmliZWQgZmlsZSBuYW1lcy4KICAgICAgICAgICAgICAqIEEgZGljdGlvbmFyeSBvZiBlcnJvcmVkIGZpbGVzIHRoYXQgd2VyZSBub3QgdHJhbnNjcmliZWQuCiAgICAiIiIKICAgICMgU2V0IG91dHB1dCBkaXJlY3Rvcnk6CiAgICBpZiBvdXRwdXRfZGlyZWN0b3J5IGlzIE5vbmU6CiAgICAgICAgb3V0cHV0X2RpcmVjdG9yeSA9IHRlbXBmaWxlLm1rZHRlbXAoKQoKICAgICMgTG9hZCB0aGUgbW9kZWw6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYiTG9hZGluZyB3aGlzcGVyIG1vZGVsOiAne21vZGVsX25hbWV9JyIpCiAgICBtb2RlbCA9IHdoaXNwZXIubG9hZF9tb2RlbChtb2RlbF9uYW1lLCBkZXZpY2U9ZGV2aWNlKQogICAgY29udGV4dC5sb2dnZXIuaW5mbygiTW9kZWwgbG9hZGVkLiIpCgogICAgIyBQcmVwYXJlIHRoZSBkYXRhZnJhbWUgYW5kIGVycm9ycyB0byBiZSByZXR1cm5lZDoKICAgIGRmID0gcGQuRGF0YUZyYW1lKAogICAgICAgIGNvbHVtbnM9WwogICAgICAgICAgICAiYXVkaW9fZmlsZSIsCiAgICAgICAgICAgICJ0cmFuc2NyaXB0aW9uX2ZpbGUiLAogICAgICAgICAgICAibGFuZ3VhZ2UiLAogICAgICAgICAgICAibGVuZ3RoIiwKICAgICAgICAgICAgInJhdGVfb2Zfc3BlZWNoIiwKICAgICAgICBdCiAgICApCiAgICBlcnJvcnMgPSB7fQoKICAgICMgQ3JlYXRlIHRoZSBvdXRwdXQgZGlyZWN0b3J5OgogICAgb3V0cHV0X2RpcmVjdG9yeSA9IHBhdGhsaWIuUGF0aChvdXRwdXRfZGlyZWN0b3J5KQogICAgaWYgbm90IG91dHB1dF9kaXJlY3RvcnkuZXhpc3RzKCk6CiAgICAgICAgb3V0cHV0X2RpcmVjdG9yeS5ta2RpcigpCgogICAgIyBHbyBvdmVyIHRoZSBhdWRpbyBmaWxlcyBhbmQgdHJhbnNjcmliZToKICAgIGF1ZGlvX2ZpbGVzX3BhdGggPSBwYXRobGliLlBhdGgoYXVkaW9fZmlsZXNfZGlyZWN0b3J5KS5hYnNvbHV0ZSgpCiAgICBpc19kaXIgPSBUcnVlCiAgICBpZiBhdWRpb19maWxlc19wYXRoLmlzX2RpcigpOgogICAgICAgIGF1ZGlvX2ZpbGVzID0gbGlzdChhdWRpb19maWxlc19wYXRoLnJnbG9iKCIqLioiKSkKICAgIGVsaWYgYXVkaW9fZmlsZXNfcGF0aC5pc19maWxlKCk6CiAgICAgICAgaXNfZGlyID0gRmFsc2UKICAgICAgICBhdWRpb19maWxlcyA9IFthdWRpb19maWxlc19wYXRoXQogICAgZWxzZToKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKAogICAgICAgICAgICBmImF1ZGlvX2ZpbGVzIHtzdHIoYXVkaW9fZmlsZXNfcGF0aCl9IG11c3QgYmUgZWl0aGVyIGEgZGlyZWN0b3J5IHBhdGggb3IgYSBmaWxlIHBhdGgiCiAgICAgICAgKQoKICAgIGZvciBpLCBhdWRpb19maWxlIGluIGVudW1lcmF0ZSh0cWRtKGF1ZGlvX2ZpbGVzLCBkZXNjPSJUcmFuc2NyaWJpbmciLCB1bml0PSJmaWxlIikpOgogICAgICAgIHRyeToKICAgICAgICAgICAgdHJhbnNjcmlwdGlvbiwgbGVuZ3RoLCByYXRlX29mX3NwZWVjaCwgbGFuZ3VhZ2UgPSBfc2luZ2xlX3RyYW5zY3JpYmUoCiAgICAgICAgICAgICAgICBhdWRpb19maWxlPWF1ZGlvX2ZpbGUsCiAgICAgICAgICAgICAgICBtb2RlbD1tb2RlbCwKICAgICAgICAgICAgICAgIGRlY29kaW5nX29wdGlvbnM9ZGVjb2Rpbmdfb3B0aW9ucywKICAgICAgICAgICAgKQoKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGV4Y2VwdGlvbjoKICAgICAgICAgICAgIyBDb2xsZWN0IHRoZSBleGNlcHRpb246CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJFcnJvciBpbiBmaWxlOiAne2F1ZGlvX2ZpbGV9JyIpCiAgICAgICAgICAgIGVycm9yc1tzdHIoYXVkaW9fZmlsZSldID0gc3RyKGV4Y2VwdGlvbikKICAgICAgICBlbHNlOgogICAgICAgICAgICAjIFdyaXRlIHRoZSB0cmFuc2NyaXB0aW9uIHRvIGZpbGU6CiAgICAgICAgICAgIHNhdmVkX2ZpbGVuYW1lID0gc3RyKGF1ZGlvX2ZpbGUucmVsYXRpdmVfdG8oYXVkaW9fZmlsZXNfcGF0aCkpLnNwbGl0KCcuJylbMF0gaWYgaXNfZGlyIGVsc2UgYXVkaW9fZmlsZS5zdGVtCiAgICAgICAgICAgIHRyYW5zY3JpcHRpb25fZmlsZSA9ICgKICAgICAgICAgICAgICAgIG91dHB1dF9kaXJlY3RvcnkKICAgICAgICAgICAgICAgIC8gZiJ7c2F2ZWRfZmlsZW5hbWV9LnR4dCIKICAgICAgICAgICAgKQogICAgICAgICAgICB0cmFuc2NyaXB0aW9uX2ZpbGUucGFyZW50Lm1rZGlyKGV4aXN0X29rPVRydWUsIHBhcmVudHM9VHJ1ZSkKICAgICAgICAgICAgd2l0aCBvcGVuKHRyYW5zY3JpcHRpb25fZmlsZSwgInciKSBhcyBmcDoKICAgICAgICAgICAgICAgIGZwLndyaXRlKHRyYW5zY3JpcHRpb24pCgogICAgICAgICAgICAjIE5vdGUgaW4gdGhlIGRhdGFmcmFtZToKICAgICAgICAgICAgZGYubG9jW2kgLSBsZW4oZXJyb3JzKV0gPSBbCiAgICAgICAgICAgICAgICBzdHIoYXVkaW9fZmlsZS5yZWxhdGl2ZV90byhhdWRpb19maWxlc19wYXRoKSksCiAgICAgICAgICAgICAgICBzdHIodHJhbnNjcmlwdGlvbl9maWxlLnJlbGF0aXZlX3RvKG91dHB1dF9kaXJlY3RvcnkpKSwKICAgICAgICAgICAgICAgIGxhbmd1YWdlLAogICAgICAgICAgICAgICAgbGVuZ3RoLAogICAgICAgICAgICAgICAgcmF0ZV9vZl9zcGVlY2gsCiAgICAgICAgICAgIF0KICAgICMgUmV0dXJuIHRoZSBkYXRhZnJhbWU6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYiRG9uZTpcbntkZi5oZWFkKCl9IikKCiAgICByZXR1cm4gb3V0cHV0X2RpcmVjdG9yeSwgZGYsIGVycm9ycwoKCmRlZiBfc2luZ2xlX3RyYW5zY3JpYmUoCiAgICBhdWRpb19maWxlOiBzdHIsCiAgICBtb2RlbDogd2hpc3Blci5XaGlzcGVyLAogICAgZGVjb2Rpbmdfb3B0aW9uczogZGljdCA9IE5vbmUsCikgLT4gVHVwbGVbc3RyLCBpbnQsIGZsb2F0LCBzdHJdOgogICAgZGVjb2Rpbmdfb3B0aW9ucyA9IGRlY29kaW5nX29wdGlvbnMgb3IgZGljdCgpCiAgICAjIExvYWQgdGhlIGF1ZGlvOgogICAgYXVkaW8gPSB3aGlzcGVyLmF1ZGlvLmxvYWRfYXVkaW8oZmlsZT1zdHIoYXVkaW9fZmlsZSkpCiAgICAjIEdldCBhdWRpbyBsZW5ndGg6CiAgICBsZW5ndGggPSBNUDMoYXVkaW9fZmlsZSkuaW5mby5sZW5ndGgKICAgICMgVHJhbnNjcmliZToKICAgIHJlc3VsdCA9IG1vZGVsLnRyYW5zY3JpYmUoYXVkaW89YXVkaW8sICoqZGVjb2Rpbmdfb3B0aW9ucykKICAgICMgVW5wYWNrIHRoZSBtb2RlbCdzIHJlc3VsdDoKICAgIHRyYW5zY3JpcHRpb24gPSByZXN1bHRbInRleHQiXQogICAgbGFuZ3VhZ2UgPSByZXN1bHQuZ2V0KCJsYW5ndWFnZSIpIG9yIGRlY29kaW5nX29wdGlvbnMuZ2V0KCJsYW5ndWFnZSIsICIiKQoKICAgICMgQ2FsY3VsYXRlIHJhdGUgb2Ygc3BlZWNoIChudW1iZXIgb2Ygd29yZHMgLyBhdWRpbyBsZW5ndGgpOgogICAgcmF0ZV9vZl9zcGVlY2ggPSBsZW4odHJhbnNjcmlwdGlvbi5zcGxpdCgpKSAvIGxlbmd0aAoKICAgIHJldHVybiB0cmFuc2NyaXB0aW9uLCBsZW5ndGgsIHJhdGVfb2Zfc3BlZWNoLCBsYW5ndWFnZQo=
    base_image: mlrun/mlrun
    commands: []
    code_origin: https://github.com/yonishelach/functions.git#676c64e7ade39a5ed7c82621cef85789582cbaca:/Users/Yonatan_Shelach/projects/functions/transcribe/transcribe.py
    origin_filename: /Users/Yonatan_Shelach/projects/functions/transcribe/transcribe.py
    requirements:
    - openai-whisper
    - tqdm
  entry_points:
    transcribe:
      name: transcribe
      doc: "Transcribe audio files into text files and collect additional data.\n\
        The end result is a directory of transcribed text files\n and a dataframe\
        \ containing the following columns:\n\n* audio_file - The original audio file\
        \ name.\n* transcription_file - The transcribed text file name in the output\
        \ directory.\n* language - The detected language in the audio file.\n* length\
        \ - The length of the audio file.\n* rate_of_speech - The number of words\
        \ divided by the audio file length."
      parameters:
      - name: context
        type: MLClientCtx
        doc: MLRun context.
        default: ''
      - name: audio_files_directory
        type: str
        doc: A directory of the audio files or a single file to transcribe.
        default: ''
      - name: model_name
        type: str
        doc: One of the official model names listed by `whisper.available_models()`.
        default: base
      - name: device
        type: Literal[, ]
        doc: Device to load the model. Can be one of {"cuda", "cpu"}. Default will
          prefer "cuda" if available.
        default: null
      - name: decoding_options
        type: dict
        doc: A dictionary of options to construct a `whisper.DecodingOptions`.
        default: null
      - name: output_directory
        type: str
        doc: Path to a directory to save all transcribed audio files.
        default: null
      outputs:
      - default: ''
        doc: 'A tuple of:'
      lineno: 28
  description: Transcribe audio files into text files
  default_handler: transcribe
  disable_auto_mount: false
  clone_target_dir: ''
  env: []
  priority_class_name: ''
  preemption_mode: prevent
  affinity: null
  tolerations: null
  security_context: {}
verbose: false
