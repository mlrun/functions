{"aggregate": {"description": "Rolling aggregation over Metrics and Lables according to specifications", "categories": ["data-prep"], "kind": "job", "docfile": "aggregate/aggregate.ipynb", "versions": {"latest": "aggregate/function.yaml"}}, "arc-to-parquet": {"description": "retrieve remote archive, open and save as parquet", "categories": ["data-movement", "utils"], "kind": "job", "docfile": "arc_to_parquet/arc_to_parquet.ipynb", "versions": {"latest": "arc_to_parquet/function.yaml"}}, "bert-embeddings": {"description": "Get BERT based embeddings for given text", "categories": ["NLP", "BERT", "embeddings"], "kind": "remote", "docfile": "bert_embeddings/bert_embeddings.ipynb", "versions": {"latest": "bert_embeddings/function.yaml"}}, "churn-server": {"description": "churn classification and predictor", "categories": ["serving", "ml"], "kind": "remote", "docfile": "churn_server/churn_server.ipynb", "versions": {"latest": "churn_server/function.yaml"}}, "concept-drift": {"description": "Deploy a streaming Concept Drift detector on a labeled stream", "categories": ["ml", "serve"], "kind": "job", "docfile": "concept_drift/concept_drift.ipynb", "versions": {"latest": "concept_drift/function.yaml"}}, "concept-drift-streaming": {"description": "Deploy a streaming Concept Drift detector on a labeled stream. the nuclio part of the concept_drift function", "categories": ["ml", "serve"], "kind": "remote", "docfile": "concept_drift_streaming/concept_drift_streaming.ipynb", "versions": {"latest": "concept_drift_streaming/function.yaml"}}, "coxph-test": {"description": "test cox proportional hazards model", "categories": ["ml", "test"], "kind": "job", "docfile": "coxph_test/coxph_test.ipynb", "versions": {"latest": "coxph_test/function.yaml"}}, "coxph-trainer": {"description": "cox proportional hazards, kaplan meier plots", "categories": ["training", "ml"], "kind": "job", "docfile": "coxph_trainer/coxph_trainer.ipynb", "versions": {"latest": "coxph_trainer/function.yaml"}}, "describe": {"description": "describe and visualizes dataset stats", "categories": ["analysis"], "kind": "job", "docfile": "describe/describe.ipynb", "versions": {"latest": "describe/function.yaml"}}, "describe-dask": {"description": "describe and visualizes dataset stats", "categories": ["analysis"], "kind": "job", "docfile": "describe_dask/describe_dask.ipynb", "versions": {"latest": "describe_dask/function.yaml"}}, "feature-perms": {"description": "estimate feature importances using permutations", "categories": ["analysis"], "kind": "job", "docfile": "feature_perms/README.ipynb", "versions": {"latest": "feature_perms/function.yaml"}}, "feature-selection": {"description": "Select features through multiple Statistical and Model filters", "categories": ["data-prep", "ml"], "kind": "job", "docfile": "feature_selection/feature_selection.ipynb", "versions": {"latest": "feature_selection/function.yaml"}}, "gen-class-data": {"description": "simulate classification data using scikit-learn", "categories": ["simulators", "ml"], "kind": "job", "docfile": "gen_class_data/gen_class_data.ipynb", "versions": {"latest": "gen_class_data/function.yaml"}}, "github-utils": {"description": "add comments to github pull requests", "categories": ["notifications", "utils"], "kind": "job", "docfile": "github_utils/github_utils.ipynb", "versions": {"latest": "github_utils/function.yaml"}}, "load-dask": {"description": "load dask cluster with data", "categories": ["data-movement", "utils"], "kind": "dask", "docfile": "load_dask/load_dask.ipynb", "versions": {"latest": "load_dask/function.yaml"}}, "load-dataset": {"description": "load a toy dataset from scikit-learn", "categories": ["data-source", "ml"], "kind": "job", "docfile": "load_dataset/load_dataset.ipynb", "versions": {"latest": "load_dataset/function.yaml"}}, "model-server": {"description": "generic sklearn model server", "categories": ["serving", "ml"], "kind": "remote", "docfile": "model_server/model_server.ipynb", "versions": {"latest": "model_server/function.yaml"}}, "model-server-tester": {"description": "test model servers", "categories": ["ml", "test"], "kind": "job", "docfile": "model_server_tester/model_server_tester.ipynb", "versions": {"latest": "model_server_tester/function.yaml"}}, "open-archive": {"description": "Open a file/object archive into a target directory", "categories": ["data-movement", "utils"], "kind": "job", "docfile": "open_archive/open_archive.ipynb", "versions": {"latest": "open_archive/function.yaml"}}, "project-runner": {"description": "Nuclio based - Cron scheduler for running your MLRun projects", "categories": ["utils"], "kind": "remote", "docfile": "project_runner/project_runner.ipynb", "versions": {"latest": "project_runner/function.yaml"}}, "send-email": {"description": "Send Email messages through SMTP server", "categories": ["notifications"], "kind": "job", "docfile": "send_email/send_email.ipynb", "versions": {"latest": "send_email/function.yaml"}}, "sentiment-analysis-serving": {"description": "BERT based sentiment classification model", "categories": ["serving", "NLP", "BERT", "sentiment analysis"], "kind": "remote", "docfile": "sentiment_analysis_serving/bert_sentiment_analysis_serving.ipynb", "versions": {"latest": "sentiment_analysis_serving/function.yaml"}}, "sklearn-classifier": {"description": "train any classifier using scikit-learn's API", "categories": ["ml", "training"], "kind": "job", "docfile": "sklearn_classifier/sklearn_classifier.ipynb", "versions": {"latest": "sklearn_classifier/function.yaml"}}, "slack-notify": {"description": "Send Slack notification", "categories": ["ops"], "kind": "job", "docfile": "slack_notify/slack_notify.ipynb", "versions": {"latest": "slack_notify/function.yaml"}}, "spark-submit": {"description": "", "categories": [], "kind": "job", "docfile": "spark_submit/spark_submit.ipynb", "versions": {"latest": "spark_submit/function.yaml"}}, "sql-to-file": {"description": "SQL To File - Ingest data using SQL query", "categories": ["data-prep"], "kind": "job", "docfile": "sql_to_file/sql_to_file.ipynb", "versions": {"latest": "sql_to_file/function.yaml"}}, "stream-to-parquet": {"description": "Saves a stream to Parquet and can lunch drift detection task on it", "categories": ["ml", "serve"], "kind": "remote", "docfile": "stream_to_parquet/stream_to_parquet.ipynb", "versions": {"latest": "stream_to_parquet/function.yaml"}}, "test-classifier": {"description": "test a classifier using held-out or new data", "categories": ["ml", "test"], "kind": "job", "docfile": "test_classifier/test_classifier.ipynb", "versions": {"latest": "test_classifier/function.yaml"}}, "tf1-serving": {"description": "tf1 image classification server", "categories": ["serving", "dl"], "kind": "remote", "docfile": "tf1_serving/tf1_serving.ipynb", "versions": {"latest": "tf1_serving/function.yaml"}}, "tf2-serving": {"description": "tf2 image classification server", "categories": ["serving", "dl"], "kind": "remote", "docfile": "tf2_serving/tf2_serving.ipynb", "versions": {"latest": "tf2_serving/function.yaml"}}, "virtual-drift": {"description": "Compute drift magnitude between Time-Samples T and U", "categories": ["ml", "serve", "concept-drift"], "kind": "job", "docfile": "virtual_drift/virtual_drift.ipynb", "versions": {"latest": "virtual_drift/function.yaml"}}, "xgb-custom": {"description": "train an xgboost model using the low-level api", "categories": ["analysis"], "kind": "job", "docfile": "xgb_custom/xgb_custom.ipynb", "versions": {"latest": "xgb_custom/function.yaml"}}, "xgb-serving": {"description": "xgboost test data classification server", "categories": ["serving", "ml"], "kind": "remote", "docfile": "xgb_serving/xgb_serving.ipynb", "versions": {"latest": "xgb_serving/function.yaml"}}, "xgb-test": {"description": "test a classifier using held-out or new data", "categories": ["ml", "test"], "kind": "job", "docfile": "xgb_test/xgb_test.ipynb", "versions": {"latest": "xgb_test/function.yaml"}}, "xgb-trainer": {"description": "train multiple model types using xgboost", "categories": ["training", "ml", "experimental"], "kind": "job", "docfile": "xgb_trainer/xgb_trainer.ipynb", "versions": {"latest": "xgb_trainer/function.yaml"}}}