kind: job
metadata:
  name: arc-to-parquet
  tag: ''
  hash: 03e2f373409f251dbbc8d104841aafcd454772e4
  project: ''
  labels:
    author: yjb
  categories:
  - data-movement
  - utils
spec:
  command: ''
  args: []
  image: mlrun/ml-base
  env: []
  default_handler: arc_to_parquet
  entry_points:
    arc_to_parquet:
      name: arc_to_parquet
      doc: "Open a file/object archive and save as a parquet file or dataset\n\nNotes\n\
        -----\n* partitioning requires precise specification of column types.\n* the\
        \ archive_url can be any file readable by pandas read_csv, which includes\
        \ tar files\n* if the `dataset` parameter is not empty, then a partitioned\
        \ dataset will be created\ninstead of a single file in the folder `dataset`\n\
        * if a key exists already then it will not be re-acquired unless the `refresh_data`\
        \ param\nis set to `True`.  This is in case the original file is corrupt,\
        \ or a refresh is \nrequired."
      parameters:
      - name: context
        type: MLClientCtx
        doc: function context
      - name: archive_url
        type: DataItem
        doc: MLRun data input (DataItem object)
      - name: header
        type: Optional[List[str]]
        doc: column names
      - name: chunksize
        type: int
        doc: (0) row size retrieved per iteration
        default: 10000
      - name: dtype
      - name: encoding
        type: str
        default: latin-1
      - name: key
        type: str
        doc: key in artifact store (when log_data=True)
        default: data
      - name: dataset
        type: Optional[str]
        doc: (None) if not None then "target_path/dataset" is folder for partitioned
          files
      - name: part_cols
        doc: ([]) list of partitioning columns
      - name: file_ext
        type: str
        doc: (parquet) csv/parquet file extension
        default: parquet
      - name: refresh_data
        type: bool
        doc: (False) overwrite existing data at that location/kye
      outputs: []
      lineno: 26
  description: retrieve remote archive, open and save as parquet
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlciBvbiAyMDIwLTA1LTAxIDIyOjA0CgppbXBvcnQgc3NsCgp0cnk6CiAgICBfY3JlYXRlX3VudmVyaWZpZWRfaHR0cHNfY29udGV4dCA9IHNzbC5fY3JlYXRlX3VudmVyaWZpZWRfY29udGV4dApleGNlcHQgQXR0cmlidXRlRXJyb3I6CiAgICAgICAgcGFzcwplbHNlOgogICAgc3NsLl9jcmVhdGVfZGVmYXVsdF9odHRwc19jb250ZXh0ID0gX2NyZWF0ZV91bnZlcmlmaWVkX2h0dHBzX2NvbnRleHQKCmltcG9ydCBvcwppbXBvcnQganNvbgppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgcHlhcnJvdy5wYXJxdWV0IGFzIHBxCmltcG9ydCBweWFycm93IGFzIHBhCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXAsIGxvYWQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IFBsb3RBcnRpZmFjdCwgVGFibGVBcnRpZmFjdAoKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QsIE9wdGlvbmFsCgpkZWYgYXJjX3RvX3BhcnF1ZXQoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIGFyY2hpdmVfdXJsOiBEYXRhSXRlbSwKICAgIGhlYWRlcjogT3B0aW9uYWxbTGlzdFtzdHJdXSA9IE5vbmUsCiAgICBjaHVua3NpemU6IGludCA9IDEwXzAwMCwKICAgIGR0eXBlPU5vbmUsCiAgICBlbmNvZGluZzogc3RyID0gImxhdGluLTEiLAogICAga2V5OiBzdHIgPSAiZGF0YSIsCiAgICBkYXRhc2V0OiBPcHRpb25hbFtzdHJdID0gTm9uZSwKICAgIHBhcnRfY29scyA9IFtdLAogICAgZmlsZV9leHQ6IHN0ciA9ICdwYXJxdWV0JywKICAgIHJlZnJlc2hfZGF0YTogYm9vbCA9IEZhbHNlCikgLT4gTm9uZToKICAgICIiIk9wZW4gYSBmaWxlL29iamVjdCBhcmNoaXZlIGFuZCBzYXZlIGFzIGEgcGFycXVldCBmaWxlIG9yIGRhdGFzZXQKCiAgICBOb3RlcwogICAgLS0tLS0KICAgICogcGFydGl0aW9uaW5nIHJlcXVpcmVzIHByZWNpc2Ugc3BlY2lmaWNhdGlvbiBvZiBjb2x1bW4gdHlwZXMuCiAgICAqIHRoZSBhcmNoaXZlX3VybCBjYW4gYmUgYW55IGZpbGUgcmVhZGFibGUgYnkgcGFuZGFzIHJlYWRfY3N2LCB3aGljaCBpbmNsdWRlcyB0YXIgZmlsZXMKICAgICogaWYgdGhlIGBkYXRhc2V0YCBwYXJhbWV0ZXIgaXMgbm90IGVtcHR5LCB0aGVuIGEgcGFydGl0aW9uZWQgZGF0YXNldCB3aWxsIGJlIGNyZWF0ZWQKICAgIGluc3RlYWQgb2YgYSBzaW5nbGUgZmlsZSBpbiB0aGUgZm9sZGVyIGBkYXRhc2V0YAogICAgKiBpZiBhIGtleSBleGlzdHMgYWxyZWFkeSB0aGVuIGl0IHdpbGwgbm90IGJlIHJlLWFjcXVpcmVkIHVubGVzcyB0aGUgYHJlZnJlc2hfZGF0YWAgcGFyYW0KICAgIGlzIHNldCB0byBgVHJ1ZWAuICBUaGlzIGlzIGluIGNhc2UgdGhlIG9yaWdpbmFsIGZpbGUgaXMgY29ycnVwdCwgb3IgYSByZWZyZXNoIGlzIAogICAgcmVxdWlyZWQuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIGFyY2hpdmVfdXJsOiAgTUxSdW4gZGF0YSBpbnB1dCAoRGF0YUl0ZW0gb2JqZWN0KQogICAgOnBhcmFtIGhlYWRlcjogICAgICAgY29sdW1uIG5hbWVzCiAgICA6cGFyYW0gY2h1bmtzaXplOiAgICAoMCkgcm93IHNpemUgcmV0cmlldmVkIHBlciBpdGVyYXRpb24KICAgIDpwYXJhbSBkdHlwZSAgICAgICAgIGRlc3RpbmF0aW9uIGRhdGEgdHlwZSBvZiBzcGVjaWZpZWQgY29sdW1ucwogICAgOnBhcmFtIGVuY29kaW5nICAgICAgKCJsYXRpbi04IikgZmlsZSBlbmNvZGluZwogICAgOnBhcmFtIGtleTogICAgICAgICAga2V5IGluIGFydGlmYWN0IHN0b3JlICh3aGVuIGxvZ19kYXRhPVRydWUpCiAgICA6cGFyYW0gZGF0YXNldDogICAgICAoTm9uZSkgaWYgbm90IE5vbmUgdGhlbiAidGFyZ2V0X3BhdGgvZGF0YXNldCIKICAgICAgICAgICAgICAgICAgICAgICAgIGlzIGZvbGRlciBmb3IgcGFydGl0aW9uZWQgZmlsZXMKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgIChwYXJxdWV0KSBjc3YvcGFycXVldCBmaWxlIGV4dGVuc2lvbgogICAgOnBhcmFtIHBhcnRfY29sczogICAgKFtdKSBsaXN0IG9mIHBhcnRpdGlvbmluZyBjb2x1bW5zCiAgICA6cGFyYW0gcmVmcmVzaF9kYXRhOiAoRmFsc2UpIG92ZXJ3cml0ZSBleGlzdGluZyBkYXRhIGF0IHRoYXQgbG9jYXRpb24va3llCiAgICAiIiIKICAgIGJhc2VfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3RfcGF0aAogICAgb3MubWFrZWRpcnMoYmFzZV9wYXRoLCBleGlzdF9vaz1UcnVlKQogICAgCiAgICBhcmNoaXZlX3VybCA9IGFyY2hpdmVfdXJsLmxvY2FsKCkKICAgIAogICAgaWYgZGF0YXNldCBpcyBub3QgTm9uZToKICAgICAgICBkZXN0X3BhdGggPSBvcy5wYXRoLmpvaW4oYmFzZV9wYXRoLCBkYXRhc2V0KQogICAgICAgIGV4aXN0cyA9IG9zLnBhdGguaXNkaXIoZGVzdF9wYXRoKQogICAgZWxzZToKICAgICAgICBkZXN0X3BhdGggPSBvcy5wYXRoLmpvaW4oYmFzZV9wYXRoLCBrZXkrZiIue2ZpbGVfZXh0fSIpCiAgICAgICAgZXhpc3RzID0gb3MucGF0aC5pc2ZpbGUoZGVzdF9wYXRoKQoKICAgIGlmIG5vdCBleGlzdHM6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygiZGVzdGluYXRpb24gZmlsZSBkb2VzIG5vdCBleGlzdCwgZG93bmxvYWRpbmciKQogICAgICAgIHBxd3JpdGVyID0gTm9uZQogICAgICAgIGZvciBpLCBkZiBpbiBlbnVtZXJhdGUocGQucmVhZF9jc3YoYXJjaGl2ZV91cmwsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2h1bmtzaXplPWNodW5rc2l6ZSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lcz1oZWFkZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmNvZGluZz1lbmNvZGluZywgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkdHlwZT1kdHlwZSkpOgogICAgICAgICAgICB0YWJsZSA9IHBhLlRhYmxlLmZyb21fcGFuZGFzKGRmKQogICAgICAgICAgICBpZiBpID09IDA6CiAgICAgICAgICAgICAgICBpZiBkYXRhc2V0OgogICAgICAgICAgICAgICAgICAgIHBxLlBhcnF1ZXRXcml0ZXIob3MucGF0aC5qb2luKGJhc2VfcGF0aCxmImhlYWRlci1vbmx5LntmaWxlX2V4dH0iKSwgdGFibGUuc2NoZW1hKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBwcXdyaXRlciA9IHBxLlBhcnF1ZXRXcml0ZXIoZGVzdF9wYXRoLCB0YWJsZS5zY2hlbWEpCiAgICAgICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgiaGVhZGVyIiwgbG9jYWxfcGF0aD1mImhlYWRlci1vbmx5LntmaWxlX2V4dH0iKQogICAgICAgICAgICBpZiBkYXRhc2V0OgogICAgICAgICAgICAgICAgcHEud3JpdGVfdG9fZGF0YXNldCh0YWJsZSwgcm9vdF9wYXRoPWRlc3RfcGF0aCwgcGFydGl0aW9uX2NvbHM9cGFydGl0aW9uX2NvbHMpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcXdyaXRlci53cml0ZV90YWJsZSh0YWJsZSkKICAgICAgICBpZiBwcXdyaXRlcjoKICAgICAgICAgICAgcHF3cml0ZXIuY2xvc2UoKQoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYic2F2ZWQgdGFibGUgdG8ge2Rlc3RfcGF0aH0iKQogICAgZWxzZToKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJkZXN0aW5hdGlvbiBmaWxlIGFscmVhZHkgZXhpc3RzIikKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KGtleSwgbG9jYWxfcGF0aD1rZXkrZiIue2ZpbGVfZXh0fSIpCgo=
    commands: []
    code_origin: https://github.com/mlrun/functions.git#9ca1e1c57dc6bc9dca79f6fc1c30fc1cbcd6b086:arc_to_parquet.ipynb
