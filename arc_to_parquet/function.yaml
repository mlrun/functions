kind: job
metadata:
  name: arc-to-parquet
  tag: latest
  hash: 00a640769f85742c22cd9df5ab05cf51155dd073
  project: ''
  labels:
    author: yjb
  categories:
  - fileutils
  - retrieve
spec:
  command: ''
  args: []
  image: mlrun/ml-base:0.4.7-py37
  env: []
  default_handler: arc_to_parquet
  entry_points:
    arc_to_parquet:
      name: arc_to_parquet
      doc: "Open a file/object archive and save as a parquet file or dataset\n\nNotes\n\
        -----\n* partitioning requires precise specification of column types.\n* the\
        \ archive_url can be any file readable by pandas read_csv, which includes\
        \ tar files\n* if the `dataset` parameter is not empty, then a partitioned\
        \ dataset will be created\ninstead of a single file in the folder `dataset`\n\
        * if a key exists already then it will not be re-acquired unless the `refresh_data`\
        \ param\nis set to `True`.  This is in case the original file is corrupt,\
        \ or a refresh is \nrequired."
      parameters:
      - name: context
        type: MLClientCtx
        doc: function context
      - name: archive_url
        type: str
        doc: any valid string path consistent with the path variable of pandas.read_csv,
          including strings as file paths, as urls,  pathlib.Path objects, etc...
      - name: header
        type: Optional[List[str]]
        doc: column names
      - name: chunksize
        type: int
        doc: (0) row size retrieved per iteration
        default: 10000
      - name: dtype
      - name: encoding
        type: str
        default: latin-1
      - name: key
        type: str
        doc: key in artifact store (when log_data=True)
        default: data
      - name: dataset
        type: Optional[str]
        doc: (None) if not None then "target_path/dataset" is folder for partitioned
          files
      - name: part_cols
        doc: ([]) list of partitioning columns
      - name: file_ext
        type: str
        doc: (parquet) csv/parquet file extension
        default: parquet
      - name: refresh_data
        type: bool
        doc: (False) overwrite existing data at that location/kye
      outputs: []
      lineno: 26
  description: retrieve remote archive, open and save as parquet
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlciBvbiAyMDIwLTA0LTMwIDAxOjU1CgppbXBvcnQgc3NsCgp0cnk6CiAgICBfY3JlYXRlX3VudmVyaWZpZWRfaHR0cHNfY29udGV4dCA9IHNzbC5fY3JlYXRlX3VudmVyaWZpZWRfY29udGV4dApleGNlcHQgQXR0cmlidXRlRXJyb3I6CiAgICAgICAgcGFzcwplbHNlOgogICAgc3NsLl9jcmVhdGVfZGVmYXVsdF9odHRwc19jb250ZXh0ID0gX2NyZWF0ZV91bnZlcmlmaWVkX2h0dHBzX2NvbnRleHQKCmltcG9ydCBvcwppbXBvcnQganNvbgppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgcHlhcnJvdy5wYXJxdWV0IGFzIHBxCmltcG9ydCBweWFycm93IGFzIHBhCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXAsIGxvYWQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IFBsb3RBcnRpZmFjdCwgVGFibGVBcnRpZmFjdAoKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QsIE9wdGlvbmFsCgpkZWYgYXJjX3RvX3BhcnF1ZXQoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIGFyY2hpdmVfdXJsOiBzdHIsCiAgICBoZWFkZXI6IE9wdGlvbmFsW0xpc3Rbc3RyXV0gPSBOb25lLAogICAgY2h1bmtzaXplOiBpbnQgPSAxMF8wMDAsCiAgICBkdHlwZT1Ob25lLAogICAgZW5jb2Rpbmc6IHN0ciA9ICJsYXRpbi0xIiwKICAgIGtleTogc3RyID0gImRhdGEiLAogICAgZGF0YXNldDogT3B0aW9uYWxbc3RyXSA9IE5vbmUsCiAgICBwYXJ0X2NvbHMgPSBbXSwKICAgIGZpbGVfZXh0OiBzdHIgPSAncGFycXVldCcsCiAgICByZWZyZXNoX2RhdGE6IGJvb2wgPSBGYWxzZQopIC0+IE5vbmU6CiAgICAiIiJPcGVuIGEgZmlsZS9vYmplY3QgYXJjaGl2ZSBhbmQgc2F2ZSBhcyBhIHBhcnF1ZXQgZmlsZSBvciBkYXRhc2V0CgogICAgTm90ZXMKICAgIC0tLS0tCiAgICAqIHBhcnRpdGlvbmluZyByZXF1aXJlcyBwcmVjaXNlIHNwZWNpZmljYXRpb24gb2YgY29sdW1uIHR5cGVzLgogICAgKiB0aGUgYXJjaGl2ZV91cmwgY2FuIGJlIGFueSBmaWxlIHJlYWRhYmxlIGJ5IHBhbmRhcyByZWFkX2Nzdiwgd2hpY2ggaW5jbHVkZXMgdGFyIGZpbGVzCiAgICAqIGlmIHRoZSBgZGF0YXNldGAgcGFyYW1ldGVyIGlzIG5vdCBlbXB0eSwgdGhlbiBhIHBhcnRpdGlvbmVkIGRhdGFzZXQgd2lsbCBiZSBjcmVhdGVkCiAgICBpbnN0ZWFkIG9mIGEgc2luZ2xlIGZpbGUgaW4gdGhlIGZvbGRlciBgZGF0YXNldGAKICAgICogaWYgYSBrZXkgZXhpc3RzIGFscmVhZHkgdGhlbiBpdCB3aWxsIG5vdCBiZSByZS1hY3F1aXJlZCB1bmxlc3MgdGhlIGByZWZyZXNoX2RhdGFgIHBhcmFtCiAgICBpcyBzZXQgdG8gYFRydWVgLiAgVGhpcyBpcyBpbiBjYXNlIHRoZSBvcmlnaW5hbCBmaWxlIGlzIGNvcnJ1cHQsIG9yIGEgcmVmcmVzaCBpcyAKICAgIHJlcXVpcmVkLgoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBhcmNoaXZlX3VybDogIGFueSB2YWxpZCBzdHJpbmcgcGF0aCBjb25zaXN0ZW50IHdpdGggdGhlIHBhdGggdmFyaWFibGUKICAgICAgICAgICAgICAgICAgICAgICAgIG9mIHBhbmRhcy5yZWFkX2NzdiwgaW5jbHVkaW5nIHN0cmluZ3MgYXMgZmlsZSBwYXRocywgYXMgdXJscywgCiAgICAgICAgICAgICAgICAgICAgICAgICBwYXRobGliLlBhdGggb2JqZWN0cywgZXRjLi4uCiAgICA6cGFyYW0gaGVhZGVyOiAgICAgICBjb2x1bW4gbmFtZXMKICAgIDpwYXJhbSBjaHVua3NpemU6ICAgICgwKSByb3cgc2l6ZSByZXRyaWV2ZWQgcGVyIGl0ZXJhdGlvbgogICAgOnBhcmFtIGR0eXBlICAgICAgICAgZGVzdGluYXRpb24gZGF0YSB0eXBlIG9mIHNwZWNpZmllZCBjb2x1bW5zCiAgICA6cGFyYW0gZW5jb2RpbmcgICAgICAoImxhdGluLTgiKSBmaWxlIGVuY29kaW5nCiAgICA6cGFyYW0ga2V5OiAgICAgICAgICBrZXkgaW4gYXJ0aWZhY3Qgc3RvcmUgKHdoZW4gbG9nX2RhdGE9VHJ1ZSkKICAgIDpwYXJhbSBkYXRhc2V0OiAgICAgIChOb25lKSBpZiBub3QgTm9uZSB0aGVuICJ0YXJnZXRfcGF0aC9kYXRhc2V0IgogICAgICAgICAgICAgICAgICAgICAgICAgaXMgZm9sZGVyIGZvciBwYXJ0aXRpb25lZCBmaWxlcwogICAgOnBhcmFtIGZpbGVfZXh0OiAgICAgKHBhcnF1ZXQpIGNzdi9wYXJxdWV0IGZpbGUgZXh0ZW5zaW9uCiAgICA6cGFyYW0gcGFydF9jb2xzOiAgICAoW10pIGxpc3Qgb2YgcGFydGl0aW9uaW5nIGNvbHVtbnMKICAgIDpwYXJhbSByZWZyZXNoX2RhdGE6IChGYWxzZSkgb3ZlcndyaXRlIGV4aXN0aW5nIGRhdGEgYXQgdGhhdCBsb2NhdGlvbi9reWUKICAgICIiIgogICAgYmFzZV9wYXRoID0gY29udGV4dC5hcnRpZmFjdF9wYXRoCiAgICBvcy5tYWtlZGlycyhiYXNlX3BhdGgsIGV4aXN0X29rPVRydWUpCiAgICAKICAgIGFyY2hpdmVfdXJsID0gc3RyKGFyY2hpdmVfdXJsKQogICAgCiAgICBpZiBkYXRhc2V0IGlzIG5vdCBOb25lOgogICAgICAgIGRlc3RfcGF0aCA9IG9zLnBhdGguam9pbihiYXNlX3BhdGgsIGRhdGFzZXQpCiAgICAgICAgZXhpc3RzID0gb3MucGF0aC5pc2RpcihkZXN0X3BhdGgpCiAgICBlbHNlOgogICAgICAgIGRlc3RfcGF0aCA9IG9zLnBhdGguam9pbihiYXNlX3BhdGgsIGtleStmIi57ZmlsZV9leHR9IikKICAgICAgICBleGlzdHMgPSBvcy5wYXRoLmlzZmlsZShkZXN0X3BhdGgpCgogICAgaWYgbm90IGV4aXN0czoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJkZXN0aW5hdGlvbiBmaWxlIGRvZXMgbm90IGV4aXN0LCBkb3dubG9hZGluZyIpCiAgICAgICAgcHF3cml0ZXIgPSBOb25lCiAgICAgICAgZm9yIGksIGRmIGluIGVudW1lcmF0ZShwZC5yZWFkX2NzdihhcmNoaXZlX3VybCwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHVua3NpemU9Y2h1bmtzaXplLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVzPWhlYWRlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kaW5nPWVuY29kaW5nLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR0eXBlPWR0eXBlKSk6CiAgICAgICAgICAgIHRhYmxlID0gcGEuVGFibGUuZnJvbV9wYW5kYXMoZGYpCiAgICAgICAgICAgIGlmIGkgPT0gMDoKICAgICAgICAgICAgICAgIGlmIGRhdGFzZXQ6CiAgICAgICAgICAgICAgICAgICAgcHEuUGFycXVldFdyaXRlcihvcy5wYXRoLmpvaW4oYmFzZV9wYXRoLGYiaGVhZGVyLW9ubHkue2ZpbGVfZXh0fSIpLCB0YWJsZS5zY2hlbWEpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHBxd3JpdGVyID0gcHEuUGFycXVldFdyaXRlcihkZXN0X3BhdGgsIHRhYmxlLnNjaGVtYSkKICAgICAgICAgICAgICAgIGNvbnRleHQubG9nX2FydGlmYWN0KCJoZWFkZXIiLCBsb2NhbF9wYXRoPWYiaGVhZGVyLW9ubHkue2ZpbGVfZXh0fSIpCiAgICAgICAgICAgIGlmIGRhdGFzZXQ6CiAgICAgICAgICAgICAgICBwcS53cml0ZV90b19kYXRhc2V0KHRhYmxlLCByb290X3BhdGg9ZGVzdF9wYXRoLCBwYXJ0aXRpb25fY29scz1wYXJ0aXRpb25fY29scykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHBxd3JpdGVyLndyaXRlX3RhYmxlKHRhYmxlKQogICAgICAgIGlmIHBxd3JpdGVyOgogICAgICAgICAgICBwcXdyaXRlci5jbG9zZSgpCgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJzYXZlZCB0YWJsZSB0byB7ZGVzdF9wYXRofSIpCiAgICBlbHNlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oImRlc3RpbmF0aW9uIGZpbGUgYWxyZWFkeSBleGlzdHMiKQogICAgY29udGV4dC5sb2dfYXJ0aWZhY3Qoa2V5LCBsb2NhbF9wYXRoPWtleStmIi57ZmlsZV9leHR9IikKCg==
    commands: []
    code_origin: https://github.com/yjb-ds/functions.git#d02a24848fda9638b6b0f4a6a48c22c2f668c5f3:arc_to_parquet.ipynb
